{"version":3,"sources":["configuration.ts","services/lang-service.ts","context/AppContext.ts","types/EPageStatus.ts","components/Footer.tsx","components/Header.tsx","services/contract-service.ts","components/Loader.tsx","components/Alert.tsx","containers/home/HomeIndex.tsx","services/identity-service.ts","containers/identity/Login.tsx","containers/identity/Register.tsx","containers/Page404.tsx","services/student-service.ts","containers/students/StudentCourses.tsx","containers/students/course/CourseIndex.tsx","services/driving-lessons-service.ts","containers/students/course/CourseSchedule.tsx","containers/teachers/TeacherOverview.tsx","services/driving-school-service.ts","containers/teachers/students/StudentsIndex.tsx","containers/teachers/students/TeacherStudentCourses.tsx","containers/teachers/students/TeacherStudentCourse.tsx","containers/teachers/TeacherSchedule.tsx","containers/teachers/students/TeacherStudentCourseSchedule.tsx","App.tsx","index.tsx"],"names":["ApiBaseUrl","LangService","jwt","headers","Authorization","this","axios","get","response","ok","status","statusCode","data","error","messages","language","Axios","create","baseURL","EPageStatus","initialAppState","userName","firstName","lastName","title","contractId","supportedLanguages","currentLanguage","name","nativeName","langResources","setAuthInfo","username","AppContext","React","createContext","AppContextProvider","Provider","Consumer","Footer","appState","useContext","className","frontEnd","components","footer","appName","Header","resource","header","history","UseHinstory","location","UseLocation","changeLanguageClicked","e","lang","a","getLangResources","currentPage","pathname","push","to","brand","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","overview","schedule","students","courses","id","role","aria-haspopup","src","process","alt","aria-labelledby","map","onClick","nativeEvent","logIn","register","logOut","ContractService","culture","params","getAxiosConfiguration","contractrId","accept","url","put","statusText","delete","EAlertClass","Loader","props","loader","pageStatus","Loading","loading","Error","Index","useState","ActiveContracts","setActiveContracts","InviteContracts","setInviteContracts","setPageStatus","containers","home","homeIndex","useHistory","LoadContracts","getAll","result","OK","filter","useEffect","ContractClicked","pushUrl","InviteClickedClicked","accepted","InviteHandle","acceptedContract","find","contract","event","drivingSchoolName","teacher","student","length","invites","description","Alert","show","alertClass","message","IdentityService","loginData","loginDataJson","JSON","stringify","post","registerData","registerDataJson","Login","identity","login","password","setLoginData","alertMessage","setAlertMessage","logInClicked","preventDefault","emptyInputs","token","firstname","lastname","onSubmit","Danger","htmlFor","value","onChange","target","placeholder","autoComplete","Register","email","passwordConfirmation","setRegisterData","registerClicked","passwordDoesntMatch","registerResponse","loginResponse","registerButton","Page404","page404","notFound","StudentService","studentCourse","bodyJson","category","courseId","console","log","studentCourseId","report","bodyStr","studentContractCourseId","StudentCourses","useParams","studentCourses","setStudentCourses","CourseClicked","LoadContractCourses","initialStudentCourseReportValues","courseName","drivingRequirementProgress","checkmarkProgress","CourseIndex","course","courseIndex","drivingLessonProgress","setdrivingLessonProgress","setReport","LoadData","getReport","progress","progressPrecent","completed","needed","drivingLessons","aria-valuenow","Number","aria-valuemin","aria-valuemax","style","width","toFixed","complete","checkmark","requirementName","isCompleted","DrivingLessonService","lessonId","lesson","start","Date","setHours","getHours","end","startStr","getDate","slice","getMonth","getFullYear","getMinutes","getSeconds","endStr","forEach","drivingLessong","entry","teachers","contractCoureId","tempData","element","CourseSchedule","courseSchedule","setDrivingLessons","nextLesson","setNextLesson","LoadReportData","LoadDrivingScheduleData","getAllByContractCourse","i","backToOverview","toLocaleString","month","year","day","time","drivingLesson","currentDate","initialDrivingLessonValues","TeacherOverview","teacherId","nextDrivingLesson","setNextDrivingLesson","teacherOverview","currentDayEnd","getTimeFramedByContract","restOfTheDay","DrivingSchoolService","inviteData","inviteDataJson","schoolId","fullName","initialDrivingSchoolValues","StudentsIndex","setStudents","drivingSchool","setDrivingSchool","filterData","setSetFilterData","inviteUsername","setInviteUsername","studentsIndex","filterClicked","GetStudents","studentsResult","inviteClicked","InviteUser","studentClicked","studentId","GetContractDrivingSchool","drivingschoolResult","schoolStudents","invite","initialStudentValues","drivingSchoolId","TeacherStudentCourses","missingCourses","setMissingCourses","setStudent","selectedMissingCourse","setSelectedMissingCourse","teacherStudentCourses","kickStudentClicked","kickStudentId","addCourseClicked","AddCourse","LoadMissingCourses","LoadStudentInfo","getMissing","addCourse","kick","TeacherStudentCourse","teacherStudentCourse","updateCourseReport","updateReport","reportUpdated","deleteContractCourse","deleteStudentContract","LoadReport","Success","checked","reportResult","parse","update","date","TeacherSchedule","range","setRange","teacherSchedule","changeRange","change","setMonth","LoadDrivingLessons","removeLesson","lessonRemoved","lessons","remove","registerLocale","et","initialInviteValue","lessonDate","TeacherStudentCourseSchedule","studentDrivingLessons","setStudentDrivingLessons","studentDrivingLessonProgress","setStudentDrivingLessonProgress","alertLessonAddedMessage","setLessonAddedAlertMessage","dangerAlertMessage","setDangerAlertMessage","teacherScheduleRange","setTeacherScheduleRange","teacherDrivingLessons","setTeacherDrivingLessons","newLesson","setInvite","teacherStudentCourseSchedule","changeTeacherScheduleRange","LoadTeacherDrivingLessons","removeTeacherLesson","LoadStudentReportData","LoadStudentDrivingScheduleData","addLesson","lessonAdded","backToStudentCourse","teacherLessons","showTimeSelect","dateFormat","timeIntervals","selected","locale","toString","inline","lessonLength","lessonLengthError","add","studentLessons","App","setAppState","LoadSupportedLanguages","getSupportedLanguages","LoadLangResources","exact","path","component","HomeIndex","StudentCourse","StudentCourseSchedule","ReactDOM","render","basename","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e6afc12.chunk.js","sourcesContent":["export const ApiBaseUrl = \"https://autokool.azurewebsites.net/api/v1\";\r\n","import { ISupportedLanguage } from './../dto/ISupportedLanguage';\r\nimport Axios, { AxiosError, AxiosRequestConfig } from 'axios';\r\nimport { ApiBaseUrl } from '../configuration';\r\nimport { IFetchResponse } from '../types/IFetchResponse';\r\nimport { ILangResources } from '../dto/ILangResources';\r\nimport { IMessages } from '../types/IMessages';\r\n\r\nexport abstract class LangService {\r\n    protected static axios = Axios.create({\r\n        baseURL: ApiBaseUrl,\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n\r\n    protected static getAxiosConfiguration(jwt?: string): AxiosRequestConfig | undefined {\r\n        if (!jwt) return undefined;\r\n        const config: AxiosRequestConfig = {\r\n            headers: {\r\n                Authorization: 'Bearer ' + jwt\r\n            }\r\n        };  \r\n        return config;      \r\n    }\r\n\r\n\r\n    static async getSupportedLanguages(): Promise<IFetchResponse<ISupportedLanguage[]>> {\r\n        try {\r\n            let response = await this.axios.get<ISupportedLanguage[]>(\"/Lang/GetSupportedLanguages\");\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data as ISupportedLanguage[]\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n    }\r\n\r\n    static async getLangResources(language: string): Promise<IFetchResponse<ILangResources>> {\r\n        try {\r\n            let response = await this.axios.get<ILangResources>(\"/Lang/GetLangResources?culture=\" + language);\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data as ILangResources\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n    }\r\n}","import React from \"react\";\r\nimport { ILangResources } from \"../dto/ILangResources\";\r\nimport { ISupportedLanguage } from \"../dto/ISupportedLanguage\";\r\n\r\nexport interface IAppState {\r\n    jwt: string | null;\r\n    userName: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    title: string | null;\r\n    contractId: string | null;\r\n    supportedLanguages: ISupportedLanguage[];\r\n    currentLanguage: ISupportedLanguage;\r\n    langResources: ILangResources;\r\n    setAuthInfo: (jwt: string | null, username: string, firstName: string, lastName: string, title: string | null, contractId: string | null, supportedLanguages: ISupportedLanguage[], currentLanguage: ISupportedLanguage, langResources: ILangResources) => void;\r\n}\r\n\r\nexport const initialAppState : IAppState = {\r\n    jwt: null,\r\n    userName: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    title: null,\r\n    contractId: null,\r\n    supportedLanguages: [],\r\n    currentLanguage: { name: 'et', nativeName: 'eesti' },\r\n    langResources: {\r\n      \"frontEnd\": {\r\n        \"components\": {\r\n          \"alert\": {},\r\n          \"footer\": {\r\n            \"appName\": \"Sõidkooli app\"\r\n          },\r\n          \"header\": {\r\n            \"brand\": \"Autokool\",\r\n            \"courses\": \"Kursused\",\r\n            \"logIn\": \"Logi sisse\",\r\n            \"logOut\": \"Logi välja\",\r\n            \"overview\": \"Ülevaade\",\r\n            \"register\": \"Registreeri\",\r\n            \"schedule\": \"Ajakava\",\r\n            \"students\": \"Õpilased\"\r\n          },\r\n          \"loader\": {\r\n            \"error\": \"Viga\",\r\n            \"loading\": \"Laeb\"\r\n          }\r\n        },\r\n        \"containers\": {\r\n          \"home\": {\r\n            \"homeIndex\": {\r\n              \"description\": \"Autokoolide veebisait töökoormuse digitaliseerimiseks. Nagu sõidutundide märkimine ja ülevaade õpilaste edusammudest. \",\r\n              \"invites\": \"Kutsed\",\r\n              \"courses\": \"Kursused\",\r\n              \"student\": \"Õpilane\",\r\n              \"teacher\": \"Õpetaja\",\r\n              \"title\": \"Sõidukooli haldamise lehekülg\"\r\n            }\r\n          },\r\n          \"identity\": {\r\n            \"login\": {\r\n              \"emptyInputs\": \"Tühi kasutajanimi või parool\",\r\n              \"logIn\": \"Logi sisse\",\r\n              \"password\": \"Parool\",\r\n              \"username\": \"Kasutajanimi\"\r\n            },\r\n            \"register\": {\r\n              \"username\": \"Kasutajanimi\",\r\n              \"email\": \"Email\",\r\n              \"emptyInputs\": \"Tühi kasutajanimi või parool\",\r\n              \"firstname\": \"Eesnimi\",\r\n              \"lastname\": \"Perenimi\",\r\n              \"password\": \"Parool\",\r\n              \"passwordConfirmation\": \"Parooli kinnitus\",\r\n              \"passwordDoesntMatch\": \"Paroolid ei kattu\",\r\n              \"registerButton\": \"Registreeri\",\r\n              \"unableToLogIn\": \"Ebaõnnestus sisse logida\"\r\n            }\r\n          },\r\n          \"student\": {\r\n            \"course\": {\r\n              \"courseIndex\": {\r\n                \"complete\": \"Läbitud\",\r\n                \"drivingLessons\": \"Sõidutunnid\",\r\n                \"progress\": \"Edenemine\"\r\n              },\r\n              \"courseSchedule\": {\r\n                \"complete\": \"Läbitud\",\r\n                \"backToOverview\": \"Tagasi\",\r\n                \"day\": \"Päev\",\r\n                \"drivingLessons\": \"Sõidutunnid\",\r\n                \"month\": \"Kuu\",\r\n                \"progress\": \"Edenemine\",\r\n                \"teacher\": \"Õpetaja\",\r\n                \"time\": \"Aeg\",\r\n                \"year\": \"Aasta\"\r\n              }\r\n            },\r\n            \"studentCourses\": {\r\n              \"category\": \"Kategooria\",\r\n              \"courses\": \"Kursused\"\r\n            }\r\n          },\r\n          \"teacher\": {\r\n            \"teacherOverview\": {\r\n              \"course\": \"Kursus\",\r\n              \"dailyLessons\": \"Päeva sõidutunnid\",\r\n              \"nextLesson\": \"Järgmine tund\",\r\n              \"restOfTheDay\": \"Ülejäänud päev\",\r\n              \"student\": \"Õpilane\",\r\n              \"time\": \"Kellaaeg\"\r\n            },\r\n            \"teacherSchedule\": {\r\n              \"lessonRemoved\": \"Sõidutund on eemaldatud\",\r\n              \"lessons\": \"Sõidutunnid\",\r\n              \"remove\": \"Eemalda\",\r\n              \"removedStudent\": \"Eemaldatud õpilane\",\r\n              \"student\": \"Õpilane\",\r\n              \"time\": \"Kellaaeg\"\r\n            },\r\n            \"students\": {\r\n              \"studentsIndex\": {\r\n                \"email\": \"Email\",\r\n                \"filter\": \"Filtreeri\",\r\n                \"invite\": \"Kutsu\",\r\n                \"name\": \"Nimi\",\r\n                \"schoolStudents\": \"Kooli õpilased\",\r\n                \"username\": \"Kasutajanimi\"\r\n              },\r\n              \"teacherStudentCourse\": {\r\n                \"complete\": \"Läbitud\",\r\n                \"drivingLessons\": \"Sõidutunnid\",\r\n                \"delete\": \"Kustutua\",\r\n                \"progress\": \"Edenemine\",\r\n                \"reportUpdated\": \"Raport uuendatud\",\r\n                \"update\": \"Uuenda\"\r\n              },\r\n              \"teacherStudentCourses\": {\r\n                \"category\": \"Kategooria\",\r\n                \"courses\": \"kursused\",\r\n                \"kick\": \"Viska välja\",\r\n                \"addCourse\": \"Lisa kursus\"\r\n              },\r\n              \"teacherStudentCourseSchedule\": {\r\n                \"add\": \"Lisa\",\r\n                \"addLesson\": \"Lisa sõidutund\",\r\n                \"backToStudentCourse\": \"Tagasi\",\r\n                \"complete\": \"Läbitud\",\r\n                \"day\": \"Kuupäev\",\r\n                \"drivingLessons\": \"Sõidutunnid\",\r\n                \"lessonLength\": \"Sõidutunni pikkus\",\r\n                \"lessonLengthError\": \"Sõidutunni pikkus peab olema kauem kui \",\r\n                \"lessonRemoved\": \"Sõidutund eemaldatud\",\r\n                \"month\": \"Kuu\",\r\n                \"nextLesson\": \"Järgmine sõidutund\",\r\n                \"progress\": \"Edenemine\",\r\n                \"remove\": \"Eemalda\",\r\n                \"student\": \"Õpilane\",\r\n                \"studentLessons\": \"Õpilase sõidutunnid\",\r\n                \"teacher\": \"Õpetaja\",\r\n                \"lessonAdded\": \"Kursus lisatud!\",\r\n                \"teacherLessons\": \"Õpetaja sõidutunnid\",\r\n                \"time\": \"Kellaaeg\",\r\n                \"year\": \"Aasta\"\r\n              }\r\n            }\r\n          },\r\n          \"page404\": {\r\n            \"notFound\": \"Lehekülg ei leitud\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    setAuthInfo: (jwt: string | null, username: string, firstName: string, lastName: string, title: string | null, contractId: string | null, supportedLanguages: ISupportedLanguage[], currentLanguage: ISupportedLanguage, langResources: ILangResources): void => {},\r\n\r\n}\r\n\r\nexport const AppContext = React.createContext<IAppState>(initialAppState);\r\nexport const AppContextProvider = AppContext.Provider;\r\nexport const AppContextConsumer = AppContext.Consumer;\r\n","export enum EPageStatus {\r\n    Loading = \"Loading...\",\r\n    Error = \"Error...\",\r\n    OK = \"Ok\",\r\n}\r\n","import { useContext } from \"react\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nconst Footer = () => {\r\n    const appState = useContext(AppContext);\r\n    return (\r\n        <footer className=\"border-top footer text-muted\">\r\n            <div className=\"container\">\r\n                &copy; 2021 - {appState.langResources.frontEnd.components.footer.appName}\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import { useContext } from \"react\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport { NavLink, useHistory as UseHinstory } from \"react-router-dom\";\r\nimport { useLocation as UseLocation } from 'react-router-dom'\r\nimport { ISupportedLanguage } from \"../dto/ISupportedLanguage\";\r\nimport { LangService } from '../services/lang-service';\r\n\r\nconst Header = () => {\r\n    const appState = useContext(AppContext);\r\n    const resource = appState.langResources.frontEnd.components.header;\r\n    const history = UseHinstory();\r\n    const location = UseLocation();\r\n    const changeLanguageClicked = async (e: Event, lang: ISupportedLanguage) => {\r\n        if (lang.name === appState.currentLanguage.name) return;\r\n        appState.currentLanguage = lang;\r\n        let response = await LangService.getLangResources(appState.currentLanguage.name);\r\n        if (!response.ok) {\r\n        } else {\r\n            appState.langResources = response.data!;\r\n            appState.setAuthInfo(appState.jwt, appState.userName, appState.firstName, appState.lastName, appState.title, appState.contractId, appState.supportedLanguages, appState.currentLanguage, appState.langResources);\r\n            const currentPage = location.pathname\r\n            history.push(\"/langRefresh\");\r\n            history.push(currentPage);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-sm navbar-toggleable-sm navbar navbar-dark bg-dark border-bottom box-shadow mb-3\">\r\n                <div className=\"container\">\r\n                    <NavLink className=\"navbar-brand\" to=\"/\">{resource.brand}</NavLink>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\".navbar-collapse\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"navbar-collapse collapse d-sm-inline-flex justify-content-between\">\r\n                        <ul className=\"navbar-nav flex-grow-1\">\r\n                            {appState.title === \"teacher\" ?\r\n                                <>\r\n                                    <li className=\"nav-item\">\r\n                                        <NavLink className=\"nav-link\" to={\"/teacher/\" + appState.contractId + \"/overview\"}>{resource.overview}</NavLink>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <NavLink className=\"nav-link\" to={\"/teacher/\" + appState.contractId + \"/schedule\"}>{resource.schedule}</NavLink>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <NavLink className=\"nav-link\" to={\"/teacher/\" + appState.contractId + \"/students\"}>{resource.students}</NavLink>\r\n                                    </li>\r\n                                </>\r\n                                : null\r\n                            }\r\n                            {appState.title === \"student\" ?\r\n                                <>\r\n                                    <li className=\"nav-item\">\r\n                                        <NavLink className=\"nav-link\" to={\"/student/courses/\" + appState.contractId}>{resource.courses}</NavLink>\r\n                                    </li>\r\n                                </>\r\n                                : null\r\n                            }\r\n                            <li className=\"nav-item dropdown\">\r\n                                <div className=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    <img id=\"nav-translation-image\" src={`${process.env.PUBLIC_URL}/assets/images/Translation-Icon-White.png`} alt=\"translation picker logo\"></img>\r\n\r\n                                </div>\r\n                                <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                    {appState.supportedLanguages.map(language =>\r\n                                        <div key={language.name} className=\"dropdown-item nav-link\" onClick={(e) => changeLanguageClicked(e.nativeEvent, language)} >\r\n                                            {language.nativeName}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                        <ul className=\"navbar-nav\">\r\n                            {appState.jwt === null ?\r\n                                <>\r\n                                    <li className=\"nav-item\">\r\n                                        <NavLink className=\"nav-link text-info d-block\" to=\"/identity/login\">{resource.logIn}</NavLink>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <NavLink className=\"nav-link text-info d-block\" to=\"/identity/register\">{resource.register}</NavLink>\r\n                                    </li>\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    <li>\r\n                                    </li>\r\n                                    <li className=\"nav-item text-center\">\r\n                                        <span className=\"username\">{appState.userName}</span>\r\n                                        <button onClick={() => {\r\n                                            appState.setAuthInfo(null, '', '', '', null, null, appState.supportedLanguages, appState.currentLanguage, appState.langResources);\r\n                                            history.push(\"/\");\r\n                                        }\r\n                                        } className=\"btn btn-link nav-link text-info\" >{resource.logOut}</button>\r\n\r\n                                    </li>\r\n                                </>\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import Axios, { AxiosError, AxiosRequestConfig } from 'axios';\r\nimport { ApiBaseUrl } from '../configuration';\r\nimport { IContract } from '../dto/IContract';\r\nimport { ICourse } from '../dto/ICourse';\r\nimport { IFetchResponse } from '../types/IFetchResponse';\r\nimport { IMessages } from '../types/IMessages';\r\n\r\n\r\nexport abstract class ContractService {\r\n    protected static axios = Axios.create({\r\n        baseURL: ApiBaseUrl,\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n\r\n    protected static getAxiosConfiguration(culture: string, jwt?: string): AxiosRequestConfig | undefined {\r\n        if (!jwt) return undefined;\r\n        const config: AxiosRequestConfig = {\r\n            params:{culture: culture},\r\n            headers: {\r\n                Authorization: 'Bearer ' + jwt\r\n            }\r\n        };  \r\n        return config;     \r\n    }\r\n\r\n    static async getAll(culture: string, jwt: string): Promise<IFetchResponse<IContract[]>> {\r\n        try {\r\n            let response = await this.axios.get<IContract[]>(\"Contracts/GetAll\"  , ContractService.getAxiosConfiguration(culture, jwt));\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data as IContract[]\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n    }\r\n\r\n    static async get(id: string, culture: string, jwt: string): Promise<IFetchResponse<IContract>> {\r\n        try {\r\n            let response = await this.axios.get<IContract>(\"Contracts/Get/\" + id, ContractService.getAxiosConfiguration(culture, jwt));\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data as IContract\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    static async getMissing(contractrId: string, culture: string, jwt: string): Promise<IFetchResponse<ICourse[]>> {\r\n        try {\r\n            let response = await this.axios.get<ICourse[]>(\"Contracts/MissingCourses/\" + contractrId, ContractService.getAxiosConfiguration(culture, jwt));\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data as ICourse[]\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n    }\r\n\r\n    static async InviteHandle( id: string, accept: boolean, culture: string, jwt: string): Promise<IFetchResponse<IContract>> {\r\n        const url = accept? \"Contracts/AcceptInvite/\" :\"Contracts/DeclineInvite/\";\r\n        try {\r\n            let response = await this.axios.put<IContract>(url + id, '', ContractService.getAxiosConfiguration(culture, jwt));\r\n\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: [error.response?.statusText!],\r\n            }\r\n        }\r\n    }\r\n\r\n    static async delete(id: string, culture: string, jwt: string): Promise<IFetchResponse<IContract>> {\r\n        try {\r\n            let response = await this.axios.delete<IContract>(\"Contracts/Delete/\" + id, ContractService.getAxiosConfiguration(culture, jwt));\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n\r\n}","import { useContext } from \"react\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport { EPageStatus } from \"../types/EPageStatus\";\r\n\r\nconst Loader = (props: { pageStatus: EPageStatus, statusCode: number }) => {\r\n    const appState = useContext(AppContext);\r\n    const resource = appState.langResources.frontEnd.components.loader;\r\n\r\n    if (props.pageStatus === EPageStatus.Loading) {\r\n        return <div className=\"alert alert-primary\" role=\"alert\">{resource.loading}...</div>;\r\n    }\r\n    if (props.pageStatus === EPageStatus.Error) {\r\n        return <div className=\"alert alert-danger\" role=\"alert\">{resource.error}... {props.statusCode}</div>\r\n    }\r\n    return <></>;\r\n}\r\n\r\nexport default Loader;","export enum EAlertClass {\r\n    Primary = 'alert-primary',\r\n    Secondary = 'alert-secondary',\r\n    Success = 'alert-success',\r\n    Danger = 'alert-danger',\r\n    Warning = 'alert-warning',\r\n    Info = 'alert-info',\r\n    Light = 'alert-light',\r\n    Dark = 'alert-dark',\r\n}\r\n\r\nconst Alert = (props: {show: boolean, message: string, alertClass: EAlertClass }) => {\r\n    \r\n    return props.show ? <div className={'alert ' + props.alertClass} role=\"alert\">{props.message}</div> : null;\r\n}\r\n\r\nexport default Alert;","import { useEffect, useState, useContext } from \"react\";\r\nimport { IContract } from \"../../dto/IContract\";\r\nimport { ContractService } from \"../../services/contract-service\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst Index = () => {\r\n    const [ActiveContracts, setActiveContracts] = useState([] as IContract[]);\r\n    const [InviteContracts, setInviteContracts] = useState([] as IContract[]);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n    const appState = useContext(AppContext);\r\n    const resource = appState.langResources.frontEnd.containers.home.homeIndex;\r\n\r\n    const history = useHistory();\r\n\r\n    const LoadContracts = async () => {\r\n        if (appState.jwt === null) return;\r\n        appState.title = null\r\n        appState.contractId = null\r\n        appState.setAuthInfo(appState.jwt, appState.userName, appState.firstName, appState.lastName, appState.title, appState.contractId, appState.supportedLanguages, appState.currentLanguage, appState.langResources);\r\n        let result = await ContractService.getAll(appState.currentLanguage.name, appState.jwt!);\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setActiveContracts(result.data.filter(e => e.status === \"active\"));\r\n            setInviteContracts(result.data.filter(e => e.status === \"invited\"));\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        LoadContracts();\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const ContractClicked = async (e: Event, contractId: string) => {\r\n        let response = await ContractService.get(contractId, appState.currentLanguage.name, appState.jwt!);\r\n        if (!response.ok) {\r\n        } else {\r\n            appState.title = response.data!.title;\r\n            appState.contractId = response.data!.contractId;\r\n            appState.setAuthInfo(appState.jwt, appState.userName, appState.firstName, appState.lastName, appState.title, appState.contractId, appState.supportedLanguages, appState.currentLanguage, appState.langResources);\r\n            const pushUrl = appState.title === \"teacher\" ? \"/teacher/\" + response.data!.contractId + \"/overview\"\r\n                : appState.title === \"student\" ? \"/student/courses/\" + response.data!.contractId\r\n                    : \"DefaultUrl\"\r\n            history.push(pushUrl);\r\n        }\r\n    }\r\n\r\n    const InviteClickedClicked = async (e: Event, contractId: string, accepted: boolean) => {\r\n        let response = await ContractService.InviteHandle(contractId, accepted, appState.currentLanguage.name, appState.jwt!);\r\n        if (!response.ok) {\r\n        } else {\r\n            setInviteContracts(InviteContracts.filter(e => e.contractId !== contractId));\r\n            if (accepted) {\r\n                const acceptedContract = InviteContracts.find(e => e.contractId === contractId)\r\n                ActiveContracts.push(acceptedContract!);\r\n                setActiveContracts(ActiveContracts);\r\n            }\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    if (appState.jwt != null) {\r\n        return (\r\n            <>\r\n                <h1 className=\"text-center\">{resource.courses}</h1>\r\n                <Loader {...pageStatus} />\r\n                {ActiveContracts.map(contract =>\r\n\r\n                    <div key={contract.contractId} className=\"bg-info btn inline-table\" onClick={(event) => ContractClicked(event.nativeEvent, contract.contractId)}>\r\n                        <h2 className=\"course-school text-center\">{contract.drivingSchoolName}</h2>\r\n                        <h4 className=\"course-title text-center\">{contract.title === \"teacher\" ? resource.teacher\r\n                            : contract.title === \"student\" ? resource.student\r\n                                : \"Default Title\"}\r\n                        </h4>\r\n                    </div>\r\n                )}\r\n\r\n                {(InviteContracts.length !== 0) ?\r\n                    <>\r\n                        <br></br><br></br><br></br><br></br><br></br><br></br>\r\n\r\n                        <h1 className=\"text-center\">{resource.invites}</h1>\r\n                        {InviteContracts.map(contract =>\r\n\r\n                            <div key={contract.contractId} className=\"bg-info inline-table\">\r\n                                <h2 className=\"course-school text-center\">{contract.drivingSchoolName}</h2>\r\n                                <h4 className=\"course-title text-center\">{contract.title === \"teacher\" ? resource.teacher\r\n                                    : contract.title === \"student\" ? resource.student\r\n                                        : \"Default Title\"}</h4>\r\n                                <i className=\"fa fa-check btn text-primary btn-font\" onClick={(event) =>\r\n                                    InviteClickedClicked(event.nativeEvent,\r\n                                        contract.contractId,\r\n                                        true\r\n                                    )}\r\n                                ></i>\r\n                                <i className=\"fa fa-times-circle btn float-right text-danger btn-font\" onClick={(event) =>\r\n                                    InviteClickedClicked(event.nativeEvent,\r\n                                        contract.contractId,\r\n                                        false)}\r\n                                ></i>\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                    : null}\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <h1>{resource.title}</h1>\r\n            <br />\r\n            <div>{resource.description}</div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Index;","import { ILoginResponse } from './../types/ILoginResponse';\r\nimport { IRegisterResponse } from './../types/IRegisterResponse';\r\nimport Axios, { AxiosError, AxiosRequestConfig } from 'axios';\r\nimport { ApiBaseUrl } from '../configuration';\r\nimport { IFetchResponse } from '../types/IFetchResponse';\r\nimport { IMessages } from '../types/IMessages';\r\n\r\nexport abstract class IdentityService {\r\n        protected static axios = Axios.create({\r\n            baseURL: ApiBaseUrl,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n    \r\n        protected static getAxiosConfiguration(culture: string): AxiosRequestConfig | undefined {\r\n            const config: AxiosRequestConfig = {\r\n                params:{culture: culture}\r\n            };  \r\n            return config;     \r\n        }\r\n\r\n\r\n\r\n    static async Login(loginData: {userName: string, password:string}, culture:string ): Promise<IFetchResponse<ILoginResponse>> {\r\n        let loginDataJson = JSON.stringify(loginData);\r\n        try {\r\n            let response = await this.axios.post<ILoginResponse>('account/login', loginDataJson, IdentityService.getAxiosConfiguration(culture));\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data as ILoginResponse\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n    }\r\n\r\n    static async Register(registerData: {email:string, firstName:string, lastName:string, userName: string, password:string}, culture:string): Promise<IFetchResponse<IRegisterResponse>> {\r\n        let registerDataJson = JSON.stringify(registerData);\r\n        try {\r\n            let response = await this.axios.post<IRegisterResponse>('account/register', registerDataJson, IdentityService.getAxiosConfiguration(culture));\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","import React, { useContext, useState } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport Alert, { EAlertClass } from \"../../components/Alert\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { IdentityService } from \"../../services/identity-service\";\r\n\r\n\r\n\r\nconst Login = () => {\r\n    const appState = useContext(AppContext);\r\n    const resource = appState.langResources.frontEnd.containers.identity.login;\r\n\r\n    const [loginData, setLoginData] = useState({ userName: '', password: '' });\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    const logInClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n        if (loginData.userName === '' || loginData.password === '') {\r\n            setAlertMessage(resource.emptyInputs);\r\n        };\r\n        setAlertMessage('');\r\n        let response = await IdentityService.Login(loginData, appState.currentLanguage.name);\r\n        if (!response.ok) {\r\n            setAlertMessage(response.messages![0]);\r\n        } else {\r\n            setAlertMessage('');\r\n            appState.jwt = response.data!.token;\r\n            appState.userName = response.data!.userName;\r\n            appState.firstName = response.data!.firstname;\r\n            appState.lastName = response.data!.lastname;\r\n            appState.title = null;\r\n            appState.contractId = null;\r\n            appState.setAuthInfo(appState.jwt, appState.userName, appState.firstName, appState.lastName, appState.title, appState.contractId, appState.supportedLanguages, appState.currentLanguage, appState.langResources);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { appState.jwt !== null ? <Redirect to=\"/\" /> : null}\r\n            <form onSubmit={(e) => logInClicked(e.nativeEvent)}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <section>\r\n                            <hr />\r\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Input_username\">{resource.username}</label>\r\n                                <input value={loginData.userName} onChange={e => setLoginData({ ...loginData, userName: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_Username\" name=\"Input.Username\" placeholder=\"\" autoComplete=\"username\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Input_Password\">{resource.password}</label>\r\n                                <input value={loginData.password} onChange={e => setLoginData({ ...loginData, password: e.target.value })} className=\"form-control\" type=\"password\" id=\"Input_Password\" name=\"Input.Password\" placeholder=\"\" autoComplete=\"current-password\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button onClick={(e) => logInClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{resource.logIn}</button>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, { useContext, useState } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport Alert, { EAlertClass } from \"../../components/Alert\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { IdentityService } from \"../../services/identity-service\";\r\n\r\n\r\n\r\nconst Register = () => {\r\n    const appState = useContext(AppContext);\r\n    const resource = appState.langResources.frontEnd.containers.identity.register;\r\n\r\n    const [registerData, setRegisterData] = useState({ firstName: '', lastName: '', email: '', userName: '', password: '', passwordConfirmation: '' });\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    const registerClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n        if (registerData.userName === '' || registerData.password === '') {\r\n            setAlertMessage(resource.emptyInputs);\r\n        };\r\n        if (registerData.password !== '' || registerData.passwordConfirmation) {\r\n            setAlertMessage(resource.passwordDoesntMatch);\r\n        };\r\n        setAlertMessage('');\r\n        let registerResponse = await IdentityService.Register(registerData, appState.currentLanguage.name);\r\n        if (!registerResponse.ok) {\r\n            setAlertMessage(registerResponse.messages![0]);\r\n        } else {\r\n            setAlertMessage('');\r\n            let loginResponse = await IdentityService.Login({ userName: registerData.userName, password: registerData.password }, appState.currentLanguage.name);\r\n            if (!loginResponse.ok) {\r\n                setAlertMessage('Unable to Log In');\r\n            } else {\r\n                appState.jwt = loginResponse.data!.token;\r\n                appState.userName = loginResponse.data!.userName;\r\n                appState.firstName = loginResponse.data!.firstname;\r\n                appState.lastName = loginResponse.data!.lastname;\r\n                appState.title = null;\r\n                appState.contractId = null;\r\n                appState.setAuthInfo(appState.jwt, appState.userName, appState.firstName, appState.lastName, appState.title, appState.contractId, appState.supportedLanguages, appState.currentLanguage, appState.langResources);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { appState.jwt !== null ? <Redirect to=\"/\" /> : null}\r\n            <form onSubmit={(e) => e.preventDefault}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <section>\r\n                            <hr />\r\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Input_username\">{resource.username}</label>\r\n                                <input value={registerData.userName} onChange={e => setRegisterData({ ...registerData, userName: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_Username\" name=\"Input.Username\" placeholder=\"username\" autoComplete=\"username\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Input_email\">{resource.emptyInputs}</label>\r\n                                <input value={registerData.email} onChange={e => setRegisterData({ ...registerData, email: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_email\" name=\"Input.email\" placeholder=\"example@mail.com\" autoComplete=\"email\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Input_Firstname\">{resource.firstname}</label>\r\n                                <input value={registerData.firstName} onChange={e => setRegisterData({ ...registerData, firstName: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_Firstname\" name=\"Input.Firstname\" placeholder=\"First name\" autoComplete=\"firstname\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Input_Lastname\">{resource.lastname}</label>\r\n                                <input value={registerData.lastName} onChange={e => setRegisterData({ ...registerData, lastName: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_Lastname\" name=\"Input.Lastname\" placeholder=\"Last name\" autoComplete=\"lastname\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Input_Password\">{resource.passwordDoesntMatch}</label>\r\n                                <input value={registerData.password} onChange={e => setRegisterData({ ...registerData, password: e.target.value })} className=\"form-control\" type=\"password\" id=\"Input_Password\" name=\"Input.Password\" placeholder=\"Input your current password...\" autoComplete=\"current-password\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Input_Password_Confirmation\">{resource.passwordConfirmation}</label>\r\n                                <input value={registerData.passwordConfirmation} onChange={e => setRegisterData({ ...registerData, passwordConfirmation: e.target.value })} className=\"form-control\" type=\"password\" id=\"Input_Password_Confirmation\" name=\"Input.Password_Confirmation\" placeholder=\"Repeat your password\" autoComplete=\"current-password\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button onClick={(e) => registerClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{resource.registerButton}</button>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Register;","import { useContext } from \"react\";\r\nimport { AppContext } from \"../context/AppContext\";\r\n\r\nconst Page404 = () => {\r\n    const appState = useContext(AppContext);\r\n    const resource = appState.langResources.frontEnd.containers.page404;\r\n    return (\r\n        <h1 className=\"text-danger\">{resource.notFound} - 404!</h1>\r\n    );\r\n}\r\n\r\nexport default Page404;","import Axios, { AxiosError, AxiosRequestConfig } from 'axios';\r\nimport { ApiBaseUrl } from '../configuration';\r\nimport { IStudentCourse } from '../dto/IStudentCourse';\r\nimport { IStudentCourseReport } from '../dto/IStudentCourseReport';\r\nimport { IFetchResponse } from '../types/IFetchResponse';\r\nimport { IMessages } from '../types/IMessages';\r\n\r\n\r\nexport abstract class StudentService {\r\n    protected static axios = Axios.create({\r\n        baseURL: ApiBaseUrl,\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n\r\n    protected static getAxiosConfiguration(culture: string, jwt?: string): AxiosRequestConfig | undefined {\r\n        if (!jwt) return undefined;\r\n        const config: AxiosRequestConfig = {\r\n            params:{culture: culture},\r\n            headers: {\r\n                Authorization: 'Bearer ' + jwt\r\n            }\r\n        };  \r\n        return config;     \r\n    }\r\n\r\n    static async getAll(contractId: string, culture: string, jwt: string): Promise<IFetchResponse<IStudentCourse[]>> {\r\n        try {\r\n            let response = await this.axios.get<IStudentCourse[]>(\"Students/Courses/\" + contractId, StudentService.getAxiosConfiguration(culture, jwt));\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data as IStudentCourse[]\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n    }\r\n\r\n    static async AddCourse(studentCourse: IStudentCourse, culture: string, jwt: string): Promise<IFetchResponse<IStudentCourse>> {\r\n        let bodyJson = JSON.stringify({\r\n            name: studentCourse.name,\r\n            description: studentCourse.description,\r\n            category: studentCourse.category,\r\n            courseId: studentCourse.courseId,\r\n            contractId: studentCourse.contractId,\r\n\r\n        });\r\n        try {\r\n            console.log(bodyJson);\r\n            let response = await this.axios.post<IStudentCourse>(\"Students/Course\", bodyJson, StudentService.getAxiosConfiguration(culture, jwt));\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n    }\r\n\r\n    static async getReport(studentCourseId: string, culture: string, jwt: string): Promise<IFetchResponse<IStudentCourseReport>> {\r\n        try {\r\n            \r\n            let response = await this.axios.get<IStudentCourseReport>(\"Students/CourseReport/\" + studentCourseId, StudentService.getAxiosConfiguration(culture, jwt));\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data as IStudentCourseReport\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n    }\r\n    static async updateReport(report: IStudentCourseReport, culture:string, jwt?: string): Promise<IFetchResponse<IStudentCourseReport>> {\r\n        try {\r\n            const bodyStr = JSON.stringify(report);\r\n            let response = await this.axios.put<IStudentCourseReport>(\"Students/CourseReport\", bodyStr, StudentService.getAxiosConfiguration(culture, jwt));\r\n\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data as IStudentCourseReport\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n    }\r\n\r\n    static async deleteStudentContract(studentContractCourseId: string, culture:string, jwt?: string): Promise<IFetchResponse<IStudentCourse>> {\r\n        try {\r\n            let response = await this.axios.delete<IStudentCourse>(\"Students/CourseDelete/\" + studentContractCourseId, StudentService.getAxiosConfiguration(culture, jwt));\r\n\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data as IStudentCourse\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n    }\r\n    \r\n}","import { useEffect, useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { IStudentCourse } from \"../../dto/IStudentCourse\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { StudentService } from \"../../services/student-service\";\r\n\r\n\r\n\r\nconst StudentCourses = () => {\r\n    const { id } = useParams() as IRouteId;\r\n    const [studentCourses, setStudentCourses] = useState([] as IStudentCourse[]);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n    const appState = useContext(AppContext);\r\n    const resource = appState.langResources.frontEnd.containers.student.studentCourses;\r\n    const history = useHistory();\r\n\r\n    const CourseClicked = async (e: Event, courseId: string) => {\r\n        const pushUrl = \"/student/course/\";\r\n        history.push(pushUrl + courseId);\r\n    }\r\n\r\n    const LoadContractCourses = async () => {\r\n        if (appState.jwt === null) return;\r\n        let result = await StudentService.getAll(id, appState.currentLanguage.name, appState.jwt!);\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setStudentCourses(result.data!);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        LoadContractCourses();\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"text-center\">{resource.courses}</h1>\r\n            <Loader {...pageStatus} />\r\n            <br /><br />\r\n            {studentCourses.map(studentCourse =>\r\n                <div key={studentCourse.id} className=\"table-entry btn\" onClick={(e) => CourseClicked(e.nativeEvent, studentCourse.id)} >\r\n                    <h3>{studentCourse.name}</h3>\r\n                    <h5>{studentCourse.description}</h5>\r\n                    <h5>{resource.category}: {studentCourse.category}</h5>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport { StudentCourses as Courses };","import { useEffect, useState, useContext } from \"react\";\r\nimport Loader from \"../../../components/Loader\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { IStudentCourseReport } from \"../../../dto/IStudentCourseReport\";\r\nimport { IDrivingRequirementProgress } from \"../../../dto/IDrivingRequirementProgress\";\r\nimport { IRequirementProgress } from \"../../../dto/IRequirementProgress\";\r\nimport { StudentService } from \"../../../services/student-service\";\r\nimport { EPageStatus } from \"../../../types/EPageStatus\";\r\nimport { AppContext } from \"../../../context/AppContext\";\r\nimport { IRouteId } from \"../../../types/IRouteId\";\r\n\r\nconst initialStudentCourseReportValues: IStudentCourseReport = {\r\n    id: '',\r\n    courseName: '',\r\n    drivingRequirementProgress: null,\r\n    checkmarkProgress: [] as IRequirementProgress[]\r\n}\r\n\r\nconst CourseIndex = () => {\r\n    const { id } = useParams() as IRouteId;\r\n    const appState = useContext(AppContext);\r\n    const resource = appState.langResources.frontEnd.containers.student.course.courseIndex;\r\n    const [drivingLessonProgress, setdrivingLessonProgress] = useState(0);\r\n    const [report, setReport] = useState(initialStudentCourseReportValues);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const LoadData = async () => {\r\n        let result = await StudentService.getReport(id, appState.currentLanguage.name, appState.jwt!);\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setReport(result.data);\r\n            const progress = result.data.drivingRequirementProgress as IDrivingRequirementProgress | null;\r\n            if (progress != null) {\r\n                var progressPrecent = ((progress.completed / progress.needed) * 100);\r\n                if (progressPrecent > 100) {\r\n                    progressPrecent = 100;\r\n                }\r\n                setdrivingLessonProgress(progressPrecent);\r\n            }\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        LoadData();\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <>\r\n            <h1>{report.courseName}</h1>\r\n            <Loader {...pageStatus} />\r\n            <br /><br />\r\n            {report.drivingRequirementProgress === null ? null :\r\n                <Link to={{ pathname: \"/student/courseSchedule/\" + report.id }} className=\"table-entry btn\">\r\n                    <h3 className=\"text-center\">{resource.drivingLessons}</h3>\r\n                    <br /><br />\r\n                    <div className='progress'>\r\n                        <div className='progress-bar bg-success'\r\n                            role='progressbar'\r\n                            aria-valuenow={Number(drivingLessonProgress)}\r\n                            aria-valuemin={0}\r\n                            aria-valuemax={100}\r\n                            style={{ width: drivingLessonProgress + '%' }}>\r\n                            <span>{drivingLessonProgress.toFixed(2)}% {resource.complete}</span>\r\n                        </div>\r\n                    </div>\r\n                    <br></br>\r\n                    <div>\r\n                        {resource.progress}: {report.drivingRequirementProgress.completed}/{report.drivingRequirementProgress.needed}\r\n                    </div>\r\n                </Link>\r\n            }\r\n            <br /><br /><br /><br />\r\n            <table>\r\n                <tbody>\r\n                    {report.checkmarkProgress.map(checkmark =>\r\n                        <tr key={checkmark.id}>\r\n                            <td>{checkmark.requirementName}</td>\r\n                            <td> < i className={\"fa fa-\" + ((checkmark.isCompleted) ? \"check text-success\" : \"times text-danger\")} ></i></td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n\r\n        </>\r\n    );\r\n}\r\nexport { CourseIndex as Index };","import Axios, { AxiosError, AxiosRequestConfig } from 'axios';\r\nimport { ApiBaseUrl } from '../configuration';\r\nimport { IDrivingLesson } from '../dto/IDrivingLesson';\r\nimport { IFetchResponse } from '../types/IFetchResponse';\r\nimport { IMessages } from '../types/IMessages';\r\n\r\n\r\nexport abstract class DrivingLessonService {\r\n    protected static axios = Axios.create({\r\n        baseURL: ApiBaseUrl,\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n    \r\n    protected static getAxiosConfiguration(culture: string, jwt?: string): AxiosRequestConfig | undefined {\r\n        if (!jwt) return undefined;\r\n        const config: AxiosRequestConfig = {\r\n            params:{culture: culture},\r\n            headers: {\r\n                Authorization: 'Bearer ' + jwt\r\n            }\r\n        };  \r\n        return config;     \r\n    }\r\n\r\n\r\n    static async delete(lessonId: string, culture: string, jwt: string): Promise<IFetchResponse<IDrivingLesson>> {\r\n        try {\r\n            let response = await this.axios.delete<IDrivingLesson>(\"DrivingLessons/Delete/\" + lessonId, DrivingLessonService.getAxiosConfiguration(culture, jwt));\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n    }\r\n\r\n    static async create(lesson: {teacherId: string, studentCourseId: string, start: Date, length: number}, culture: string, jwt: string): Promise<IFetchResponse<IDrivingLesson>> {\r\n        try {\r\n            lesson.start = new Date(lesson.start.setHours(lesson.start.getHours() + 3));\r\n\r\n            let bodyStr = JSON.stringify(lesson);\r\n            let response = await this.axios.post<IDrivingLesson>(\"DrivingLessons/Create\", bodyStr, DrivingLessonService.getAxiosConfiguration(culture, jwt));\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n    }\r\n\r\n    static async getTimeFramedByContract(contractId: string, start: Date, end: Date, culture: string, jwt: string): Promise<IFetchResponse<IDrivingLesson[]>> {\r\n        const startStr = \r\n        (\"0\" + start.getDate()).slice(-2) + \"-\" + \r\n        (\"0\" + (start.getMonth() + 1)).slice(-2) + \"-\" + \r\n        start.getFullYear() + \" \" + \r\n        (\"0\" + (start.getHours())).slice(-2) + ':' + \r\n        (\"0\" + start.getMinutes()).slice(-2) + ':' + \r\n        (\"0\" + start.getSeconds()).slice(-2);\r\n        const endStr = \r\n        (\"0\" + end.getDate()).slice(-2) + \"-\" + \r\n        (\"0\" + (end.getMonth() + 1)).slice(-2) + \"-\" + \r\n        start.getFullYear() + \" \" + \r\n        (\"0\" + end.getHours()).slice(-2) + ':' + \r\n        (\"0\" + end.getMinutes()).slice(-2) + ':' + \r\n        (\"0\" + end.getSeconds()).slice(-2);\r\n        try {\r\n            let response = await this.axios.get<IDrivingLesson[]>(\r\n                \"DrivingLessons/ContractDrivingLessons/\" + contractId + \"/\" + startStr + \"/\" + endStr, \r\n            DrivingLessonService.getAxiosConfiguration(culture, jwt)\r\n            );\r\n            var result = [] as IDrivingLesson[];\r\n            response.data!.forEach(drivingLessong => {\r\n                const entry: IDrivingLesson = {\r\n                    id: drivingLessong.id,\r\n                    teachers: drivingLessong.teachers,\r\n                    students: drivingLessong.students,\r\n                    courseName: drivingLessong.courseName,\r\n                    start: new Date(drivingLessong.start),\r\n                    end: new Date(drivingLessong.end)\r\n                }\r\n                result.push(entry);\r\n            });\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: result\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n    }\r\n\r\n    static async getAllByContractCourse(contractCoureId: string, culture: string, jwt: string): Promise<IFetchResponse<IDrivingLesson[]>> {\r\n        try {\r\n            let response = await this.axios.get(\"DrivingLessons/ContractCourseDrivingLessons/\" + contractCoureId, DrivingLessonService.getAxiosConfiguration(culture, jwt));\r\n            var tempData = response.data as { \r\n                id: string;\r\n                teachers: string;\r\n                students: string;\r\n                courseName: string;\r\n                start: string;\r\n                end: string;}[]\r\n            var result = [] as IDrivingLesson[]\r\n            tempData.forEach(element => {\r\n                const entry: IDrivingLesson = {\r\n                    id: element.id,\r\n                    teachers: element.teachers,\r\n                    students: element.students,\r\n                    courseName: element.courseName,\r\n                    start: new Date(element.start),\r\n                    end: new Date(element.end)\r\n                }\r\n                result.push(entry);\r\n            });\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: result\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n    }\r\n    \r\n}","import { useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../../types/IRouteId\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IDrivingLesson } from \"../../../dto/IDrivingLesson\";\r\nimport { IStudentCourseReport } from \"../../../dto/IStudentCourseReport\";\r\nimport { IRequirementProgress } from \"../../../dto/IRequirementProgress\";\r\nimport { IDrivingRequirementProgress } from \"../../../dto/IDrivingRequirementProgress\";\r\nimport Loader from \"../../../components/Loader\";\r\nimport { DrivingLessonService } from \"../../../services/driving-lessons-service\";\r\nimport { EPageStatus } from \"../../../types/EPageStatus\";\r\nimport { AppContext } from \"../../../context/AppContext\";\r\nimport { StudentService } from \"../../../services/student-service\";\r\n\r\nconst initialStudentCourseReportValues: IStudentCourseReport = {\r\n    id: '',\r\n    courseName: '',\r\n    drivingRequirementProgress: null,\r\n    checkmarkProgress: [] as IRequirementProgress[]\r\n}\r\nconst initialNextLessonValue: any = null;\r\n\r\nconst CourseSchedule = () => {\r\n    const appState = useContext(AppContext);\r\n    const resource = appState.langResources.frontEnd.containers.student.course.courseSchedule;\r\n    const { id } = useParams() as IRouteId;\r\n    const [drivingLessons, setDrivingLessons] = useState([] as IDrivingLesson[]);\r\n    const [drivingLessonProgress, setdrivingLessonProgress] = useState(0);\r\n    const [report, setReport] = useState(initialStudentCourseReportValues);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n    const [nextLesson, setNextLesson] = useState(initialNextLessonValue)\r\n    const LoadReportData = async () => {\r\n        let result = await StudentService.getReport(id, appState.currentLanguage.name, appState.jwt!);\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setReport(result.data);\r\n            const progress = result.data.drivingRequirementProgress as IDrivingRequirementProgress | null;\r\n            if (progress != null) {\r\n                var progressPrecent = ((progress.completed / progress.needed) * 100);\r\n                if (progressPrecent > 100) {\r\n                    progressPrecent = 100;\r\n                }\r\n                setdrivingLessonProgress(progressPrecent);\r\n            }\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    const LoadDrivingScheduleData = async () => {\r\n        let result = await DrivingLessonService.getAllByContractCourse(id, appState.currentLanguage.name, appState.jwt!);\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setDrivingLessons(result.data);\r\n            for (var i = 0; i < result.data.length; i++) {\r\n                if (result.data[i].start >= new Date()) {\r\n                    setNextLesson(result.data[i]);\r\n                    break;\r\n\r\n                }\r\n            }\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        LoadReportData(); // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        LoadDrivingScheduleData(); // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h1>{report.courseName}</h1>\r\n            <div>\r\n                <Link\r\n                    to={\"/student/course/\" + report.id}\r\n                >{resource.backToOverview}</Link>\r\n            </div >\r\n            <Loader {...pageStatus} />\r\n            <br /><br />\r\n            {report.drivingRequirementProgress === null ? null :\r\n                <div className=\"table-entry\">\r\n                    <h3 className=\"text-center\">{resource.drivingLessons}</h3>\r\n                    <br /><br />\r\n                    <div className='progress'>\r\n                        <div className='progress-bar bg-success'\r\n                            role='progressbar'\r\n                            aria-valuenow={Number(drivingLessonProgress)}\r\n                            aria-valuemin={0}\r\n                            aria-valuemax={100}\r\n                            style={{ width: drivingLessonProgress + '%' }}>\r\n                            <span>{drivingLessonProgress.toFixed(2)}% {resource.complete}</span>\r\n                        </div>\r\n                    </div>\r\n                    <br></br>\r\n                    <div>\r\n                        {resource.progress}: {report.drivingRequirementProgress.completed}/{report.drivingRequirementProgress.needed}\r\n                    </div>\r\n                    {(nextLesson === null) ? null :\r\n                        <div>\r\n                            <div>\r\n                                Next Lesson: {\r\n                                    nextLesson.start.getFullYear() + \" \" +\r\n                                    nextLesson.start.toLocaleString('default', { month: 'long' }) + \" \" +\r\n                                    nextLesson.start.getDate() + \" \" +\r\n                                    (\"0\" + nextLesson.start.getHours()).slice(-2) +\r\n                                    \":\" +\r\n                                    (\"0\" + nextLesson.start.getMinutes()).slice(-2) +\r\n                                    \"-\" +\r\n                                    (\"0\" + nextLesson.end.getHours()).slice(-2) +\r\n                                    \":\" +\r\n                                    (\"0\" + nextLesson.end.getMinutes()).slice(-2)\r\n                                }\r\n                            </div>\r\n                            <div>{nextLesson.teachers}</div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            }\r\n            <br /><br />\r\n            <table className=\"table table-hover\">\r\n                <thead>\r\n                    <tr className=\"row\">\r\n                        <th className=\"col\">{resource.year}</th>\r\n                        <th className=\"col\">{resource.month}</th>\r\n                        <th className=\"col\">{resource.day}</th>\r\n                        <th className=\"col\">{resource.time}</th>\r\n                        <th className=\"col\">{resource.teacher}</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {drivingLessons.map(drivingLesson =>\r\n                        <tr className=\"row\" key={drivingLesson.id}>\r\n                            <td className=\"col\">{drivingLesson.start.getFullYear()}</td>\r\n                            <td className=\"col\">{drivingLesson.start.toLocaleString(appState.currentLanguage.name, { month: 'long' })}</td>\r\n                            <td className=\"col\">{drivingLesson.start.getDate()}</td>\r\n                            <td className=\"col\">\r\n                                {\r\n                                    (\"0\" + drivingLesson.start.getHours()).slice(-2) +\r\n                                    \":\" +\r\n                                    (\"0\" + drivingLesson.start.getMinutes()).slice(-2) +\r\n                                    \"-\" +\r\n                                    (\"0\" + drivingLesson.end.getHours()).slice(-2) +\r\n                                    \":\" +\r\n                                    (\"0\" + drivingLesson.end.getMinutes()).slice(-2)\r\n                                }\r\n                            </td>\r\n                            <td className=\"col\">{drivingLesson.teachers}</td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { CourseSchedule as Schedule };","import { useEffect, useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { IDrivingLesson } from \"../../dto/IDrivingLesson\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport { DrivingLessonService } from \"../../services/driving-lessons-service\";\r\n\r\nconst currentDate = new Date()\r\nconst initialDrivingLessonValues: IDrivingLesson = {\r\n    id: '',\r\n    teachers: '',\r\n    students: '',\r\n    courseName: '',\r\n    start: currentDate,\r\n    end: currentDate\r\n}\r\n\r\n\r\nconst TeacherOverview = () => {\r\n    const { teacherId } = useParams() as IRouteId;\r\n    const [drivingLessons, setDrivingLessons] = useState([] as IDrivingLesson[]);\r\n    const [nextDrivingLesson, setNextDrivingLesson] = useState(initialDrivingLessonValues);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n    const appState = useContext(AppContext);\r\n    const resource = appState.langResources.frontEnd.containers.teacher.teacherOverview;\r\n\r\n    const LoadContractCourses = async () => {\r\n        if (appState.jwt === null) return;\r\n        const currentDate = new Date();\r\n        const currentDayEnd = new Date();\r\n        currentDayEnd.setHours(23, 59, 59, 999)\r\n        let result = await DrivingLessonService.getTimeFramedByContract(teacherId, currentDate, currentDayEnd, appState.currentLanguage.name, appState.jwt!);\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setDrivingLessons(result.data!);\r\n            if (result.data.length > 0) setNextDrivingLesson(result.data![0]);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        LoadContractCourses();\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"text-center\">{resource.course}</h1>\r\n            <Loader {...pageStatus} />\r\n            <br /><br />\r\n            <div className=\"table-entry\">\r\n                <div>\r\n                    <h2 className=\"text-center\">{resource.nextLesson}</h2>\r\n                    <table >\r\n                        <thead>\r\n                            <tr></tr>\r\n                            <tr></tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>{resource.time}</td>\r\n                                <td>\r\n                                    {(drivingLessons.length === 0) ? \"\" :\r\n                                        (\"0\" + nextDrivingLesson.start.getHours()).slice(-2) +\r\n                                        \":\" +\r\n                                        (\"0\" + nextDrivingLesson.start.getMinutes()).slice(-2) +\r\n                                        \"-\" +\r\n                                        (\"0\" + nextDrivingLesson.end.getHours()).slice(-2) +\r\n                                        \":\" +\r\n                                        (\"0\" + nextDrivingLesson.end.getMinutes()).slice(-2)\r\n                                    }\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{resource.student}</td>\r\n                                <td>{nextDrivingLesson.students}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{resource.course}</td>\r\n                                <td>{nextDrivingLesson.courseName}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div>\r\n                    <h4 className=\"text-center\">{resource.restOfTheDay}</h4>\r\n                    {drivingLessons.map(drivingLesson =>\r\n                        <table key={drivingLesson.id} className=\"inline-table-overview-students table-entry\">\r\n                            <thead>\r\n                                <tr></tr>\r\n                                <tr></tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>{resource.time}</td>\r\n                                    <td>\r\n                                        {\r\n                                            (\"0\" + drivingLesson.start.getHours()).slice(-2) +\r\n                                            \":\" +\r\n                                            (\"0\" + drivingLesson.start.getMinutes()).slice(-2) +\r\n                                            \"-\" +\r\n                                            (\"0\" + drivingLesson.end.getHours()).slice(-2) +\r\n                                            \":\" +\r\n                                            (\"0\" + drivingLesson.end.getMinutes()).slice(-2)\r\n                                        }\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>{resource.student}</td>\r\n                                    <td>{drivingLesson.students}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>{resource.course}</td>\r\n                                    <td>{drivingLesson.courseName}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { TeacherOverview };","import Axios, { AxiosError, AxiosRequestConfig } from 'axios';\r\nimport { ApiBaseUrl } from '../configuration';\r\nimport { IDrivingSchool } from '../dto/IDrivingSchool';\r\nimport { IStudent } from '../dto/IStudent';\r\nimport { IFetchResponse } from '../types/IFetchResponse';\r\nimport { IMessages } from '../types/IMessages';\r\n\r\n\r\nexport abstract class DrivingSchoolService {\r\n    protected static axios = Axios.create({\r\n        baseURL: ApiBaseUrl,\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n    \r\n    protected static getAxiosConfiguration(culture: string, jwt?: string): AxiosRequestConfig | undefined {\r\n        if (!jwt) return undefined;\r\n        const config: AxiosRequestConfig = {\r\n            params:{culture: culture},\r\n            headers: {\r\n                Authorization: 'Bearer ' + jwt\r\n            }\r\n        };  \r\n        return config;     \r\n    }\r\n\r\n\r\n    \r\n    static async InviteUser(inviteData: {username: string, schoolId: string}, culture: string, jwt: string): Promise<IFetchResponse<IStudent[]>> {\r\n        let inviteDataJson = JSON.stringify(inviteData);\r\n\r\n        try {\r\n            let response = await this.axios.post<IStudent[]>(\r\n                \"DrivingSchools/InviteStudent\", \r\n                inviteDataJson,\r\n                DrivingSchoolService.getAxiosConfiguration(culture, jwt)\r\n            );\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data as IStudent[]\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n    }\r\n\r\n    static async GetStudents(schoolId: string, fullName: string, username: string, culture: string, jwt: string): Promise<IFetchResponse<IStudent[]>> {\r\n        try {\r\n            let response = await this.axios.get<IStudent[]>(\r\n                \"DrivingSchools/Students/\" + schoolId + \"/\" + fullName + \"/\" + username, \r\n                DrivingSchoolService.getAxiosConfiguration(culture, jwt)\r\n            );\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data as IStudent[]\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n    }\r\n\r\n    static async GetContractDrivingSchool(contractId: string, culture: string, jwt: string): Promise<IFetchResponse<IDrivingSchool>> {\r\n        try {\r\n            let response = await this.axios.get<IDrivingSchool>(\r\n                \"DrivingSchools/DrivingSchoolByContract/\" + contractId, \r\n                DrivingSchoolService.getAxiosConfiguration(culture, jwt)\r\n            );\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data as IDrivingSchool\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n    }\r\n    \r\n}","import { useEffect, useState, useContext } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Loader from \"../../../components/Loader\";\r\nimport { IStudent } from \"../../../dto/IStudent\";\r\nimport { EPageStatus } from \"../../../types/EPageStatus\";\r\nimport { AppContext } from \"../../../context/AppContext\";\r\nimport { IRouteId } from \"../../../types/IRouteId\";\r\nimport { DrivingSchoolService } from \"../../../services/driving-school-service\";\r\nimport Alert, { EAlertClass } from \"../../../components/Alert\";\r\nimport { IDrivingSchool } from \"../../../dto/IDrivingSchool\";\r\n\r\nconst initialDrivingSchoolValues: IDrivingSchool = {\r\n    id: '',\r\n    name: '',\r\n    description: ''\r\n}\r\n\r\nconst StudentsIndex = () => {\r\n    const { teacherId } = useParams() as IRouteId;\r\n    const [students, setStudents] = useState([] as IStudent[]);\r\n    const [drivingSchool, setDrivingSchool] = useState(initialDrivingSchoolValues);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const [filterData, setSetFilterData] = useState({ userName: '', fullName: '' });\r\n    const [inviteUsername, setInviteUsername] = useState('');\r\n    const history = useHistory();\r\n    const appState = useContext(AppContext);\r\n    const resource = appState.langResources.frontEnd.containers.teacher.students.studentsIndex;\r\n\r\n    const filterClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n        if (filterData.userName === '') {\r\n            filterData.userName = \" \";\r\n        }\r\n        if (filterData.fullName === '') {\r\n            filterData.fullName = \" \";\r\n        };\r\n        let studentsResult = await DrivingSchoolService.GetStudents(drivingSchool.id, filterData.fullName, filterData.userName, appState.currentLanguage.name, appState.jwt!);\r\n        if (studentsResult.ok && studentsResult.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setStudents(studentsResult.data!);\r\n        } else {\r\n            setAlertMessage(studentsResult.messages![0]);\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: studentsResult.statusCode });\r\n        }\r\n    }\r\n\r\n    const inviteClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n\r\n        let studentsResult = await DrivingSchoolService.InviteUser(\r\n            {\r\n                schoolId: drivingSchool.id,\r\n                username: inviteUsername\r\n            }\r\n            , appState.currentLanguage.name, appState.jwt!);\r\n        if (studentsResult.ok && studentsResult.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            filterClicked(e);\r\n        } else {\r\n            setAlertMessage(studentsResult.messages![0]);\r\n        }\r\n    }\r\n\r\n    const studentClicked = async (e: Event, studentId: string) => {\r\n        e.preventDefault();\r\n        history.push(\"/teacher/\" + teacherId + \"/student/\" + studentId);\r\n\r\n    }\r\n\r\n    const LoadContractCourses = async () => {\r\n        if (appState.jwt === null) return;\r\n        let drivingschoolResult = await DrivingSchoolService.GetContractDrivingSchool(teacherId, appState.currentLanguage.name, appState.jwt!);\r\n        if (drivingschoolResult.ok && drivingschoolResult.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setDrivingSchool(drivingschoolResult.data!);\r\n        } else {\r\n            setAlertMessage(drivingschoolResult.messages![0]);\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: drivingschoolResult.statusCode });\r\n            return;\r\n        }\r\n        let studentsResult = await DrivingSchoolService.GetStudents(drivingschoolResult.data.id, \" \", \" \", appState.currentLanguage.name, appState.jwt!);\r\n        if (studentsResult.ok && studentsResult.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setStudents(studentsResult.data!);\r\n        } else {\r\n            setAlertMessage(studentsResult.messages![0]);\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: studentsResult.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        LoadContractCourses();\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"text-center\">{resource.schoolStudents}</h1>\r\n            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\r\n            <Loader {...pageStatus} />\r\n            <br /><br />\r\n\r\n            <div className=\"row justify-content\">\r\n                <form className=\"col-2\" onSubmit={(e) => e.preventDefault}>\r\n                    <section>\r\n                        <hr />\r\n                        <div className=\"form-group text-center\">\r\n                            <label htmlFor=\"Input_inviteUsername\">{resource.username}</label>\r\n                            <input\r\n                                value={inviteUsername}\r\n                                onChange={e => setInviteUsername(e.target.value)}\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                id=\"Input_inviteUsername\"\r\n                                name=\"Input.InviteUsername\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button onClick={(e) => inviteClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{resource.invite}</button>\r\n                        </div>\r\n                    </section>\r\n                </form>\r\n                <div className=\"col-7\"></div>\r\n                <form className=\"col-3 float-right\" onSubmit={(e) => e.preventDefault}>\r\n                    <section>\r\n                        <hr />\r\n                        <div className=\"form-group text-center\">\r\n                            <label htmlFor=\"Input_username\">{resource.username}</label>\r\n                            <input\r\n                                value={filterData.userName}\r\n                                onChange={e => setSetFilterData({ ...filterData, userName: e.target.value })}\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                id=\"Input_Username\"\r\n                                name=\"Input.Username\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group text-center\">\r\n                            <label htmlFor=\"Input_Password\">{resource.name}</label>\r\n                            <input\r\n                                value={filterData.fullName}\r\n                                onChange={e => setSetFilterData({ ...filterData, fullName: e.target.value })}\r\n                                className=\"form-control\"\r\n                                type=\"fullName\"\r\n                                id=\"Input_FullName\"\r\n                                name=\"Input.FullName\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button onClick={(e) => filterClicked(e.nativeEvent)} type=\"submit\" className=\"btn float-right btn-primary\">Filter</button>\r\n                        </div>\r\n                    </section>\r\n                </form>\r\n            </div>\r\n            {students.map(student =>\r\n                <div key={student.id} onClick={(e) => studentClicked(e.nativeEvent, student.id)} className=\"btn inline-table-overview-students table-entry\">\r\n                    <h3>{student.fullName}</h3>\r\n                    <br></br>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th></th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>{resource.username}</td>\r\n                                <td>{student.username}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{resource.email}</td>\r\n                                <td>{student.email}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport { StudentsIndex };","import { useEffect, useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Loader from \"../../../components/Loader\";\r\nimport { IStudentCourse } from \"../../../dto/IStudentCourse\";\r\nimport { EPageStatus } from \"../../../types/EPageStatus\";\r\nimport { AppContext } from \"../../../context/AppContext\";\r\nimport { IRouteId } from \"../../../types/IRouteId\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { StudentService } from \"../../../services/student-service\";\r\nimport { ICourse } from \"../../../dto/ICourse\";\r\nimport { ContractService } from \"../../../services/contract-service\";\r\nimport { IContract } from \"../../../dto/IContract\";\r\n\r\nconst initialStudentValues: IContract = {\r\n    contractId: '',\r\n    name: '',\r\n    drivingSchoolId: '',\r\n    drivingSchoolName: '',\r\n    title: '',\r\n    status: ''\r\n}\r\n\r\n\r\nconst TeacherStudentCourses = () => {\r\n    const { teacherId, studentId } = useParams() as IRouteId;\r\n    const [studentCourses, setStudentCourses] = useState([] as IStudentCourse[]);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n    const [missingCourses, setMissingCourses] = useState([] as ICourse[]);\r\n    const [student, setStudent] = useState(initialStudentValues);\r\n    const [selectedMissingCourse, setSelectedMissingCourse] = useState('');\r\n    const appState = useContext(AppContext);\r\n    const resource = appState.langResources.frontEnd.containers.teacher.students.teacherStudentCourses;\r\n    const history = useHistory();\r\n    const CourseClicked = async (e: Event, courseId: string) => {\r\n        const pushUrl = \"/teacher/\" + teacherId + \"/student/\" + studentId + \"/course/\" + courseId;\r\n        history.push(pushUrl);\r\n    }\r\n    const kickStudentClicked = async (e: Event, kickStudentId: string) => {\r\n        e.preventDefault();\r\n\r\n        let studentsResult = await ContractService.delete(kickStudentId, appState.currentLanguage.name, appState.jwt!);\r\n        if (studentsResult.ok && studentsResult.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            const pushUrl = \"/teacher/\" + teacherId + \"/students\";\r\n            history.push(pushUrl);\r\n\r\n        }\r\n    }\r\n\r\n    const addCourseClicked = async (e: Event, courseId: string) => {\r\n        e.preventDefault();\r\n        var studentCourse: IStudentCourse = {\r\n            id: '',\r\n            name: '',\r\n            description: '',\r\n            category: '',\r\n            contractId: studentId,\r\n            courseId: courseId\r\n        }\r\n        let studentsResult = await StudentService.AddCourse(\r\n            studentCourse\r\n            , appState.currentLanguage.name, appState.jwt!);\r\n        if (studentsResult.ok && studentsResult.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            LoadContractCourses();\r\n            LoadMissingCourses();\r\n        };\r\n    };\r\n\r\n\r\n\r\n    const LoadStudentInfo = async () => {\r\n        if (appState.jwt === null) return;\r\n        let result = await ContractService.get(studentId, appState.currentLanguage.name, appState.jwt!);\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setStudent(result.data!);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n    const LoadContractCourses = async () => {\r\n        if (appState.jwt === null) return;\r\n        let result = await StudentService.getAll(studentId, appState.currentLanguage.name, appState.jwt!);\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setStudentCourses(result.data!);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n    const LoadMissingCourses = async () => {\r\n        if (appState.jwt === null) return;\r\n        let result = await ContractService.getMissing(studentId, appState.currentLanguage.name, appState.jwt!);\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setMissingCourses(result.data!);\r\n            if (result.data!.length > 0) {\r\n                setSelectedMissingCourse(result.data[0].id)\r\n            }\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        LoadContractCourses();\r\n        LoadMissingCourses();\r\n        LoadStudentInfo();\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"text-center\">{student.name} {resource.courses}</h1>\r\n            <Loader {...pageStatus} />\r\n            <br /><br />\r\n            {missingCourses.length === 0 ? null :\r\n                <div className=\"row justify-content\">\r\n                    <div className=\"col-10\"></div>\r\n                    <form className=\"col-2\" onSubmit={(e) => e.preventDefault}>\r\n                        <section>\r\n                            <hr />\r\n                            <div className=\"form-group text-center\">\r\n                                <label htmlFor=\"course-select\">{resource.courses}</label>\r\n                                <select onChange={(e) => setSelectedMissingCourse(e.target.value)} className=\"form-control\" id=\"course-select\">\r\n                                    {missingCourses.map(course =>\r\n                                        <option key={course.id} value={course.id}>{course.name}</option>\r\n                                    )}\r\n                                </select>\r\n\r\n                            </div>\r\n                            <div className=\"form-group text-center\">\r\n                                <button onClick={(e) => addCourseClicked(e.nativeEvent, selectedMissingCourse)} type=\"submit\" className=\"btn btn-primary\">{resource.addCourse}</button>\r\n                            </div>\r\n                        </section>\r\n                    </form>\r\n                </div>\r\n            }\r\n\r\n            {studentCourses.map(studentCourse =>\r\n                <div key={studentCourse.id} onClick={(e) => CourseClicked(e.nativeEvent, studentCourse.id)} className=\"table-entry btn\" >\r\n                    <h3>{studentCourse.name}</h3>\r\n                    <h5>{studentCourse.description}</h5>\r\n                    <h5>{resource.category}: {studentCourse.category}</h5>\r\n                </div>\r\n            )}\r\n            <form className=\"float-right\" onSubmit={(e) => e.preventDefault}>\r\n                <section>\r\n                    <hr />\r\n                    <div className=\"form-group\">\r\n                        <button onClick={(e) => kickStudentClicked(e.nativeEvent, studentId)} type=\"submit\" className=\"btn float-right btn-danger\">{resource.kick}</button>\r\n                    </div>\r\n                </section>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { TeacherStudentCourses };","import { useEffect, useState, useContext } from \"react\";\r\nimport Loader from \"../../../components/Loader\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { IStudentCourseReport } from \"../../../dto/IStudentCourseReport\";\r\nimport { IDrivingRequirementProgress } from \"../../../dto/IDrivingRequirementProgress\";\r\nimport { IRequirementProgress } from \"../../../dto/IRequirementProgress\";\r\nimport { StudentService } from \"../../../services/student-service\";\r\nimport { EPageStatus } from \"../../../types/EPageStatus\";\r\nimport { AppContext } from \"../../../context/AppContext\";\r\nimport { IRouteId } from \"../../../types/IRouteId\";\r\nimport { IContract } from \"../../../dto/IContract\";\r\nimport { ContractService } from \"../../../services/contract-service\";\r\nimport Alert, { EAlertClass } from \"../../../components/Alert\";\r\n\r\nconst initialStudentValues: IContract = {\r\n    contractId: '',\r\n    name: '',\r\n    drivingSchoolId: '',\r\n    drivingSchoolName: '',\r\n    title: '',\r\n    status: ''\r\n}\r\n\r\n\r\nconst initialStudentCourseReportValues: IStudentCourseReport = {\r\n    id: '',\r\n    courseName: '',\r\n    drivingRequirementProgress: null,\r\n    checkmarkProgress: [] as IRequirementProgress[]\r\n}\r\n\r\nconst TeacherStudentCourse = () => {\r\n    const { teacherId, studentId, studentCourseId } = useParams() as IRouteId;\r\n    const appState = useContext(AppContext);\r\n    const [drivingLessonProgress, setdrivingLessonProgress] = useState(0);\r\n    const [report, setReport] = useState(initialStudentCourseReportValues);\r\n    const [student, setStudent] = useState(initialStudentValues);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const history = useHistory();\r\n    const resource = appState.langResources.frontEnd.containers.teacher.students.teacherStudentCourse;\r\n\r\n    const updateCourseReport = async (e: Event) => {\r\n        e.preventDefault();\r\n        let result = await StudentService.updateReport(report, appState.currentLanguage.name, appState.jwt!)\r\n        if (result.ok && result.data) {\r\n            setAlertMessage(resource.reportUpdated);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    const deleteContractCourse = async (e: Event) => {\r\n        e.preventDefault();\r\n        let result = await StudentService.deleteStudentContract(studentCourseId, appState.currentLanguage.name, appState.jwt!)\r\n        if (result.ok && result.data) {\r\n            history.push(\"/teacher/\" + teacherId + \"/student/\" + studentId)\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    const LoadStudentInfo = async () => {\r\n        if (appState.jwt === null) return;\r\n        let result = await ContractService.get(studentId, appState.currentLanguage.name, appState.jwt!);\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setStudent(result.data!);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n    const LoadReport = async () => {\r\n        let result = await StudentService.getReport(studentCourseId, appState.currentLanguage.name, appState.jwt!);\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setReport(result.data);\r\n            const progress = result.data.drivingRequirementProgress as IDrivingRequirementProgress | null;\r\n            if (progress != null) {\r\n                var progressPrecent = ((progress.completed / progress.needed) * 100);\r\n                if (progressPrecent > 100) {\r\n                    progressPrecent = 100;\r\n                }\r\n                setdrivingLessonProgress(progressPrecent);\r\n            }\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        LoadReport();\r\n        LoadStudentInfo();\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <>\r\n            <h1>{report.courseName}</h1>\r\n            <h2>{student.name}</h2>\r\n            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Success} />\r\n            <Loader {...pageStatus} />\r\n            <br /><br />\r\n            {report.drivingRequirementProgress === null ? null :\r\n                <Link to={{ pathname: \"/teacher/\" + teacherId + \"/student/\" + studentId + \"/course/\" + studentCourseId + \"/schedule\" }} className=\"table-entry btn\">\r\n                    <h3 className=\"text-center\">{resource.drivingLessons}</h3>\r\n                    <br /><br />\r\n                    <div className='progress'>\r\n                        <div className='progress-bar bg-success'\r\n                            role='progressbar'\r\n                            aria-valuenow={Number(drivingLessonProgress)}\r\n                            aria-valuemin={0}\r\n                            aria-valuemax={100}\r\n                            style={{ width: drivingLessonProgress + '%' }}>\r\n                            <span>{drivingLessonProgress.toFixed(2)}% {resource.complete}</span>\r\n                        </div>\r\n                    </div>\r\n                    <br></br>\r\n                    <div>\r\n                        {resource.progress}: {report.drivingRequirementProgress.completed}/{report.drivingRequirementProgress.needed}\r\n                    </div>\r\n                </Link>\r\n            }\r\n            <br /><br /><br /><br />\r\n            <table>\r\n                <tbody>\r\n                    {report.checkmarkProgress.map(checkmark =>\r\n                        <tr key={checkmark.id} >\r\n                            <td>\r\n                                <label className=\"container\" htmlFor={\"checkbox-\" + checkmark.id}>\r\n                                    {checkmark.requirementName}\r\n                                </label>\r\n\r\n                            </td>\r\n                            <td>\r\n                                <input checked={checkmark.isCompleted} onChange={\r\n                                    (e) => {\r\n                                        let reportResult: IStudentCourseReport = JSON.parse(JSON.stringify(report));\r\n                                        for (let i = 0; i < reportResult.checkmarkProgress.length; i++) {\r\n                                            const reportCheckmark = reportResult.checkmarkProgress[i];\r\n                                            if (reportCheckmark.id === checkmark.id) {\r\n                                                reportResult.checkmarkProgress[i].isCompleted = (e.target as HTMLInputElement).checked;\r\n                                                setReport(reportResult);\r\n                                                return;\r\n                                            }\r\n                                        };\r\n                                    }} type=\"checkbox\" className=\"checkmark-input\" id={\"checkbox-\" + checkmark.id} />\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n            <div className=\"container\">\r\n                <div className=\"btn btn-primary col-2\" onClick={(e) => updateCourseReport(e.nativeEvent)}>{resource.update}</div>\r\n                <div className=\"btn btn-danger col-2 float-right\" onClick={(e) => deleteContractCourse(e.nativeEvent)}>{resource.delete}</div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport { TeacherStudentCourse };","import { useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { IDrivingLesson } from \"../../dto/IDrivingLesson\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { DrivingLessonService } from \"../../services/driving-lessons-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport Alert, { EAlertClass } from \"../../components/Alert\";\r\n\r\nconst date = new Date()\r\n\r\nconst TeacherSchedule = () => {\r\n    const { teacherId } = useParams() as IRouteId;\r\n    const [drivingLessons, setDrivingLessons] = useState([] as IDrivingLesson[]);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const [range, setRange] = useState({ start: new Date(date.getFullYear(), date.getMonth(), 1), end: new Date(date.getFullYear(), date.getMonth() + 1, 0) });\r\n    const appState = useContext(AppContext);\r\n    const resource = appState.langResources.frontEnd.containers.teacher.teacherSchedule;\r\n\r\n\r\n    const changeRange = async (e: Event, change: number) => {\r\n        e.preventDefault();\r\n        setRange(\r\n            {\r\n                start: new Date(range.start.setMonth(range.start.getMonth() + change)),\r\n                end: new Date(range.end.setMonth(range.end.getMonth() + change))\r\n            })\r\n        LoadDrivingLessons();\r\n    }\r\n\r\n    const removeLesson = async (e: Event, lessonId: string) => {\r\n        e.preventDefault();\r\n        let result = await DrivingLessonService.delete(lessonId, appState.currentLanguage.name, appState.jwt!)\r\n        if (result.ok && result.data) {\r\n            setAlertMessage(resource.lessonRemoved);\r\n            LoadDrivingLessons();\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    const LoadDrivingLessons = async () => {\r\n        if (appState.jwt === null) return;\r\n        let result = await DrivingLessonService.getTimeFramedByContract(teacherId, range.start, range.end, appState.currentLanguage.name, appState.jwt!);\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setDrivingLessons(result.data!);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        LoadDrivingLessons();\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"text-center\">{resource.lessons}</h1>\r\n            <Loader {...pageStatus} />\r\n            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Success} />\r\n            <div className=\"text-center\">\r\n                <i className=\"fa fa-arrow-left cursor-pointer\" onClick={(e) => changeRange(e.nativeEvent, -1)}></i>\r\n                <span>\r\n                    {\" \" + range.start.getFullYear() + \" \" + range.start.toLocaleString(appState.currentLanguage.name, { month: 'long' }) + \" \"}\r\n                </span>\r\n                <i className=\"fa fa-arrow-right cursor-pointer\" onClick={(e) => changeRange(e.nativeEvent, +1)}></i>\r\n            </div>\r\n            <br /><br />\r\n            <div className=\"table-entry\">\r\n                <div>\r\n                    <table className=\"table text-center\">\r\n                        <thead>\r\n                            <th>{resource.time}</th>\r\n                            <th>{resource.student}</th>\r\n                            <th></th>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                            {drivingLessons.map(drivingLesson =>\r\n                                <tr key={drivingLesson.id}>\r\n                                    <td>\r\n                                        {\r\n                                            (\"0\" + drivingLesson.start.getDate()).slice(-2) +\r\n                                            \" \" +\r\n                                            (\"0\" + drivingLesson.start.getHours()).slice(-2) +\r\n                                            \":\" +\r\n                                            (\"0\" + drivingLesson.start.getMinutes()).slice(-2) +\r\n                                            \"-\" +\r\n                                            (\"0\" + drivingLesson.end.getHours()).slice(-2) +\r\n                                            \":\" +\r\n                                            (\"0\" + drivingLesson.end.getMinutes()).slice(-2)\r\n                                        }\r\n                                    </td>\r\n                                    <td>\r\n                                        {drivingLesson.students === \"\" ? \"Removed Student\" : drivingLesson.students}\r\n                                    </td>\r\n                                    <td>\r\n                                        <span className=\"btn btn-danger\" onClick={(e) => removeLesson(e.nativeEvent, drivingLesson.id)}>{resource.remove}</span>\r\n                                    </td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport { TeacherSchedule };","import { useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../../types/IRouteId\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IDrivingLesson } from \"../../../dto/IDrivingLesson\";\r\nimport { IStudentCourseReport } from \"../../../dto/IStudentCourseReport\";\r\nimport { IRequirementProgress } from \"../../../dto/IRequirementProgress\";\r\nimport { IDrivingRequirementProgress } from \"../../../dto/IDrivingRequirementProgress\";\r\nimport Loader from \"../../../components/Loader\";\r\nimport { DrivingLessonService } from \"../../../services/driving-lessons-service\";\r\nimport { EPageStatus } from \"../../../types/EPageStatus\";\r\nimport { AppContext } from \"../../../context/AppContext\";\r\nimport { StudentService } from \"../../../services/student-service\";\r\nimport Alert, { EAlertClass } from \"../../../components/Alert\";\r\nimport { IContract } from \"../../../dto/IContract\";\r\nimport { ContractService } from \"../../../services/contract-service\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport et from \"date-fns/locale/et\"; // the locale you want\r\nregisterLocale(\"et\", et);\r\n\r\nconst initialStudentCourseReportValues: IStudentCourseReport = {\r\n    id: '',\r\n    courseName: '',\r\n    drivingRequirementProgress: null,\r\n    checkmarkProgress: [] as IRequirementProgress[]\r\n}\r\n\r\nconst initialStudentValues: IContract = {\r\n    contractId: '',\r\n    name: '',\r\n    drivingSchoolId: '',\r\n    drivingSchoolName: '',\r\n    title: '',\r\n    status: ''\r\n}\r\n\r\nconst initialInviteValue: IInvite = {\r\n    lessonDate: new Date(),\r\n    length: 2\r\n}\r\n\r\ninterface IInvite {\r\n    lessonDate: Date,\r\n    length: number\r\n}\r\nconst date = new Date()\r\n\r\nconst initialNextLessonValue: any = null;\r\n\r\n\r\nconst TeacherStudentCourseSchedule = () => {\r\n    const appState = useContext(AppContext);\r\n    const { teacherId, studentId, studentCourseId } = useParams() as IRouteId;\r\n    const [studentDrivingLessons, setStudentDrivingLessons] = useState([] as IDrivingLesson[]);\r\n    const [studentDrivingLessonProgress, setStudentDrivingLessonProgress] = useState(0);\r\n    const [report, setReport] = useState(initialStudentCourseReportValues);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n    const [nextLesson, setNextLesson] = useState(initialNextLessonValue)\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const [alertLessonAddedMessage, setLessonAddedAlertMessage] = useState('');\r\n    const [dangerAlertMessage, setDangerAlertMessage] = useState('');\r\n    const [teacherScheduleRange, setTeacherScheduleRange] = useState({ start: new Date(date.getFullYear(), date.getMonth(), 1), end: new Date(date.getFullYear(), date.getMonth() + 1, 0) });\r\n    const [teacherDrivingLessons, setTeacherDrivingLessons] = useState([] as IDrivingLesson[]);\r\n    const [student, setStudent] = useState(initialStudentValues);\r\n    const [newLesson, setInvite] = useState(initialInviteValue);\r\n    const resource = appState.langResources.frontEnd.containers.teacher.students.teacherStudentCourseSchedule;\r\n\r\n\r\n\r\n    const changeTeacherScheduleRange = async (e: Event, change: number) => {\r\n        e.preventDefault();\r\n        setTeacherScheduleRange(\r\n            {\r\n                start: new Date(teacherScheduleRange.start.setMonth(teacherScheduleRange.start.getMonth() + change)),\r\n                end: new Date(teacherScheduleRange.end.setMonth(teacherScheduleRange.end.getMonth() + change))\r\n            })\r\n        LoadTeacherDrivingLessons();\r\n    }\r\n\r\n    const removeTeacherLesson = async (e: Event, lessonId: string) => {\r\n        e.preventDefault();\r\n        let result = await DrivingLessonService.delete(lessonId, appState.currentLanguage.name, appState.jwt!)\r\n        if (result.ok && result.data) {\r\n            setAlertMessage(resource.lessonRemoved);\r\n            LoadTeacherDrivingLessons();\r\n            LoadStudentReportData();\r\n            LoadStudentDrivingScheduleData();\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    const addLesson = async (e: Event) => {\r\n        e.preventDefault();\r\n        let response = await DrivingLessonService.create(\r\n            {\r\n                teacherId: teacherId,\r\n                studentCourseId: studentCourseId,\r\n                start: newLesson.lessonDate,\r\n                length: newLesson.length\r\n            }, appState.currentLanguage.name, appState.jwt!)\r\n        if (response.ok && response.data) {\r\n            setDangerAlertMessage('');\r\n            setLessonAddedAlertMessage(resource.lessonAdded);\r\n            LoadTeacherDrivingLessons();\r\n            LoadStudentReportData();\r\n            LoadStudentDrivingScheduleData();\r\n        } else {\r\n            setDangerAlertMessage(response.messages![0]);\r\n        }\r\n    }\r\n\r\n    const LoadStudentInfo = async () => {\r\n        if (appState.jwt === null) return;\r\n        let result = await ContractService.get(studentId, appState.currentLanguage.name, appState.jwt!);\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setStudent(result.data!);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n\r\n    const LoadTeacherDrivingLessons = async () => {\r\n        if (appState.jwt === null) return;\r\n        let result = await DrivingLessonService.getTimeFramedByContract(teacherId, teacherScheduleRange.start, teacherScheduleRange.end, appState.currentLanguage.name, appState.jwt!);\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setTeacherDrivingLessons(result.data!);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n\r\n    const LoadStudentReportData = async () => {\r\n        let result = await StudentService.getReport(studentCourseId, appState.currentLanguage.name, appState.jwt!);\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setReport(result.data);\r\n            const progress = result.data.drivingRequirementProgress as IDrivingRequirementProgress | null;\r\n            if (progress != null) {\r\n                var progressPrecent = ((progress.completed / progress.needed) * 100);\r\n                if (progressPrecent > 100) {\r\n                    progressPrecent = 100;\r\n                }\r\n                setStudentDrivingLessonProgress(progressPrecent);\r\n            }\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    const LoadStudentDrivingScheduleData = async () => {\r\n        let result = await DrivingLessonService.getAllByContractCourse(studentCourseId, appState.currentLanguage.name, appState.jwt!);\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setStudentDrivingLessons(result.data);\r\n            for (var i = 0; i < result.data.length; i++) {\r\n                if (result.data[i].start >= new Date()) {\r\n                    setNextLesson(result.data[i]);\r\n                    break;\r\n\r\n                }\r\n            }\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        LoadTeacherDrivingLessons(); // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        LoadStudentInfo(); // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        LoadStudentReportData(); // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        LoadStudentDrivingScheduleData(); // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h1>{report.courseName}</h1>\r\n            <h3>{student.name}</h3>\r\n            <div>\r\n                <Link\r\n                    to={\"/teacher/\" + teacherId + \"/student/\" + studentId + \"/course/\" + studentCourseId}\r\n                >{resource.backToStudentCourse}</Link>\r\n            </div >\r\n            <Loader {...pageStatus} />\r\n            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Success} />\r\n            <br /><br />\r\n            {report.drivingRequirementProgress === null ? null :\r\n                <div className=\"table-entry\">\r\n                    <h3 className=\"text-center\">{resource.drivingLessons}</h3>\r\n                    <br /><br />\r\n                    <div className='progress'>\r\n                        <div className='progress-bar bg-success'\r\n                            role='progressbar'\r\n                            aria-valuenow={Number(studentDrivingLessonProgress)}\r\n                            aria-valuemin={0}\r\n                            aria-valuemax={100}\r\n                            style={{ width: studentDrivingLessonProgress + '%' }}>\r\n                            <span>{studentDrivingLessonProgress.toFixed(2)}% {resource.complete}</span>\r\n                        </div>\r\n                    </div>\r\n                    <br></br>\r\n                    <div>\r\n                        {resource.progress}: {report.drivingRequirementProgress.completed}/{report.drivingRequirementProgress.needed}\r\n                    </div>\r\n                    {(nextLesson === null) ? null :\r\n                        <div>\r\n                            <div>\r\n                                {resource.nextLesson}: {\r\n                                    nextLesson.start.getFullYear() + \" \" +\r\n                                    nextLesson.start.toLocaleString('default', { month: 'long' }) + \" \" +\r\n                                    nextLesson.start.getDate() + \" \" +\r\n                                    (\"0\" + nextLesson.start.getHours()).slice(-2) +\r\n                                    \":\" +\r\n                                    (\"0\" + nextLesson.start.getMinutes()).slice(-2) +\r\n                                    \"-\" +\r\n                                    (\"0\" + nextLesson.end.getHours()).slice(-2) +\r\n                                    \":\" +\r\n                                    (\"0\" + nextLesson.end.getMinutes()).slice(-2)\r\n                                }\r\n                            </div>\r\n                            <div>{nextLesson.teachers}</div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            }\r\n            <br /><br />\r\n            <h2>{resource.teacherLessons}</h2>\r\n            <br /><br />\r\n            <div className=\"table-entry\">\r\n                <div className=\"text-center h4\">\r\n                    <i className=\"fa fa-arrow-left cursor-pointer\" onClick={(e) => changeTeacherScheduleRange(e.nativeEvent, -1)}></i>\r\n                    <span>\r\n                        {\" \" + teacherScheduleRange.start.getFullYear() + \" \" + teacherScheduleRange.start.toLocaleString(appState.currentLanguage.name, { month: 'long' }) + \" \"}\r\n                    </span>\r\n                    <i className=\"fa fa-arrow-right cursor-pointer\" onClick={(e) => changeTeacherScheduleRange(e.nativeEvent, +1)}></i>\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <table className=\"table text-center\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>{resource.time}</th>\r\n                                <th>{resource.student}</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                            {teacherDrivingLessons.map(drivingLesson =>\r\n                                <tr key={drivingLesson.id}>\r\n                                    <td>\r\n                                        {\r\n                                            (\"0\" + drivingLesson.start.getDate()).slice(-2) +\r\n                                            \" \" +\r\n                                            (\"0\" + drivingLesson.start.getHours()).slice(-2) +\r\n                                            \":\" +\r\n                                            (\"0\" + drivingLesson.start.getMinutes()).slice(-2) +\r\n                                            \"-\" +\r\n                                            (\"0\" + drivingLesson.end.getHours()).slice(-2) +\r\n                                            \":\" +\r\n                                            (\"0\" + drivingLesson.end.getMinutes()).slice(-2)\r\n                                        }\r\n                                    </td>\r\n                                    <td>\r\n                                        {drivingLesson.students === \"\" ? \"Removed Student\" : drivingLesson.students}\r\n                                    </td>\r\n                                    <td>\r\n                                        <span className=\"btn btn-danger\" onClick={(e) => removeTeacherLesson(e.nativeEvent, drivingLesson.id)}>{resource.remove}</span>\r\n                                    </td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <br />\r\n            <h4>{resource.addLesson}</h4>\r\n            <br />\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-auto\">\r\n                        <DatePicker\r\n                            showTimeSelect\r\n                            dateFormat=\"MMMM d, yyyy hh:mm\"\r\n                            timeIntervals={15}\r\n                            selected={newLesson.lessonDate}\r\n                            locale={appState.currentLanguage.name}\r\n                            onChange={(date) => {\r\n                                setInvite({ lessonDate: new Date(date!.toString()), length: newLesson.length });\r\n                            }}\r\n                            inline\r\n\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                        <Alert show={dangerAlertMessage !== ''} message={dangerAlertMessage} alertClass={EAlertClass.Danger} />\r\n                        <Alert show={alertLessonAddedMessage !== ''} message={alertLessonAddedMessage} alertClass={EAlertClass.Success} />\r\n                        <label htmlFor=\"lessonLength\">{resource.lessonLength}</label>\r\n                        <br></br>\r\n                        <input className=\"col-6\" id=\"lessonLength\" type=\"number\" onChange={(e) => {\r\n                            if (Number(e.target.value) <= 0) {\r\n                                setDangerAlertMessage(resource.lessonLengthError + e.target.value + \"!\");\r\n                            } else {\r\n                                setDangerAlertMessage('');\r\n                                setInvite({ lessonDate: newLesson.lessonDate, length: Number(e.target.value) })\r\n                            }\r\n                        }} value={newLesson.length}></input>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br />\r\n            <div className=\"btn btn-primary\" onClick={(e) => addLesson(e.nativeEvent)}>{resource.add}</div>\r\n            <br /><br /><br /><br />\r\n            <h2>{resource.studentLessons}</h2>\r\n            <table className=\"table table-hover\">\r\n                <thead>\r\n                    <tr className=\"row\">\r\n                        <th className=\"col\">{resource.year}</th>\r\n                        <th className=\"col\">{resource.month}</th>\r\n                        <th className=\"col\">{resource.day}</th>\r\n                        <th className=\"col\">{resource.time}</th>\r\n                        <th className=\"col\">{resource.teacher}</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {studentDrivingLessons.map(drivingLesson =>\r\n                        <tr className=\"row\" key={drivingLesson.id}>\r\n                            <td className=\"col\">{drivingLesson.start.getFullYear()}</td>\r\n                            <td className=\"col\">{drivingLesson.start.toLocaleString(appState.currentLanguage.name, { month: 'long' })}</td>\r\n                            <td className=\"col\">{drivingLesson.start.getDate()}</td>\r\n                            <td className=\"col\">\r\n                                {\r\n                                    (\"0\" + drivingLesson.start.getHours()).slice(-2) +\r\n                                    \":\" +\r\n                                    (\"0\" + drivingLesson.start.getMinutes()).slice(-2) +\r\n                                    \"-\" +\r\n                                    (\"0\" + drivingLesson.end.getHours()).slice(-2) +\r\n                                    \":\" +\r\n                                    (\"0\" + drivingLesson.end.getMinutes()).slice(-2)\r\n                                }\r\n                            </td>\r\n                            <td className=\"col\">{drivingLesson.teachers}</td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { TeacherStudentCourseSchedule };","import { useEffect, useState } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { LangService } from './services/lang-service';\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport HomeIndex from './containers/home/HomeIndex';\r\nimport Login from './containers/identity/Login';\r\nimport Register from './containers/identity/Register';\r\nimport Page404 from './containers/Page404';\r\nimport { AppContextProvider, initialAppState } from './context/AppContext';\r\nimport { ILangResources } from \"./dto/ILangResources\";\r\nimport { ISupportedLanguage } from \"./dto/ISupportedLanguage\";\r\n\r\nimport { Courses as StudentCourses } from './containers/students/StudentCourses';\r\nimport { Index as StudentCourse } from './containers/students/course/CourseIndex';\r\nimport { Schedule as StudentCourseSchedule } from './containers/students/course/CourseSchedule';\r\n\r\n\r\nimport { TeacherOverview } from './containers/teachers/TeacherOverview';\r\nimport { StudentsIndex } from './containers/teachers/students/StudentsIndex';\r\nimport { TeacherStudentCourses } from './containers/teachers/students/TeacherStudentCourses';\r\nimport { TeacherStudentCourse } from './containers/teachers/students/TeacherStudentCourse';\r\nimport { TeacherSchedule } from './containers/teachers/TeacherSchedule';\r\nimport { TeacherStudentCourseSchedule } from './containers/teachers/students/TeacherStudentCourseSchedule';\r\n\r\nfunction App() {\r\n    const setAuthInfo = (jwt: string | null, userName: string, firstName: string, lastName: string, title: string | null, contractId: string | null, supportedLanguages: ISupportedLanguage[], currentLanguage: ISupportedLanguage, langResources: ILangResources): void => {\r\n        setAppState({ ...appState, jwt, userName, firstName, lastName, title, contractId, supportedLanguages, currentLanguage, langResources });\r\n    }\r\n    const [appState, setAppState] = useState({ ...initialAppState, setAuthInfo });\r\n\r\n    const LoadSupportedLanguages = async () => {\r\n        let response = await LangService.getSupportedLanguages();\r\n        if (response.ok && response.data) {\r\n            appState.supportedLanguages = response.data as ISupportedLanguage[];\r\n            appState.setAuthInfo(appState.jwt, appState.userName, appState.firstName, appState.lastName, appState.title, appState.contractId, appState.supportedLanguages, appState.currentLanguage, appState.langResources);\r\n        } else {\r\n        }\r\n    }\r\n\r\n    const LoadLangResources = async () => {\r\n        let response = await LangService.getLangResources(appState.currentLanguage.name);\r\n        if (response.ok && response.data) {\r\n            appState.langResources = response.data as ILangResources;\r\n            appState.setAuthInfo(appState.jwt, appState.userName, appState.firstName, appState.lastName, appState.title, appState.contractId, appState.supportedLanguages, appState.currentLanguage, appState.langResources);\r\n        } else {\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        LoadLangResources();\r\n        LoadSupportedLanguages();\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <>\r\n            <AppContextProvider value={appState} >\r\n                <Header />\r\n                <div className=\"container\">\r\n                    <main role=\"main\" className=\"pb-3\">\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={HomeIndex} />\r\n\r\n                            <Route path=\"/identity/login\" component={Login} />\r\n                            <Route path=\"/identity/register\" component={Register} />\r\n\r\n                            <Route path=\"/student/courses/:id\" component={StudentCourses} />\r\n                            <Route path=\"/student/course/:id\" component={StudentCourse} />\r\n                            <Route path=\"/student/courseSchedule/:id\" component={StudentCourseSchedule} />\r\n\r\n                            <Route path=\"/teacher/:teacherId/overview\" component={TeacherOverview} />\r\n                            <Route path=\"/teacher/:teacherId/schedule\" component={TeacherSchedule} />\r\n                            <Route path=\"/teacher/:teacherId/students\" component={StudentsIndex} />\r\n                            <Route path=\"/teacher/:teacherId/student/:studentId/course/:studentCourseId/schedule\" component={TeacherStudentCourseSchedule} />\r\n                            <Route path=\"/teacher/:teacherId/student/:studentId/course/:studentCourseId\" component={TeacherStudentCourse} />\r\n                            <Route path=\"/teacher/:teacherId/student/:studentId\" component={TeacherStudentCourses} />\r\n\r\n                            <Route component={Page404} />\r\n                        </Switch>\r\n                    </main>\r\n                </div>\r\n                <Footer />\r\n            </AppContextProvider>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import 'jquery';\r\nimport 'popper.js';\r\nimport 'bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nimport './assets/site.css'\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n        <React.StrictMode>\r\n            <App />\r\n        </React.StrictMode>\r\n    </Router>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}