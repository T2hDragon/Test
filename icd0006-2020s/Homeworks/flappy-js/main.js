(()=>{"use strict";class t{constructor(t,e,i,s=5,n=.2){this.col=t,this.row=e,this.maxRow=i,this.jumpPower=s,this.currentPower=this.jumpPower,this.changePerTick=n,this.change=this.urrentPower*this.changePerTick}jump(){this.currentPower=this.jumpPower}nextGameTick(){this.row-=this.currentPower*this.changePerTick,this.currentPower=this.currentPower-.5}getRow(){return Math.round(this.row)}getColumn(){return Math.round(this.col)}checkOutOfBounds(){return this.maxRow<this.row||0>this.row}newPosition(t,e){this.col=t,this.row=e}}const e="0";class i{constructor(t,e=0,i=0){this.name=t,this.bestScore=e,this.currentScore=i}increaseScore(){this.currentScore++,this.currentScore>this.bestScore&&(this.bestScore=this.currentScore)}newGame(){this.currentScore=0}}class s{constructor(t){this.cells=t,this.columnCount=this.cells.length,this.rowCount=0!==this.columnCount?t[0].length:0,this.initializeBoardHtml(),this.jumped=!1,this.stop=!1,document.addEventListener("keyup",(t=>{switch(t.code){case"Space":this.jumped=!0;break;case"KeyS":this.stop=!0}}))}getRowHeight(){return(window.innerHeight-50)/this.rowCount}getColumnHeight(){return window.innerWidth/this.columnCount}updateBoardHtml(t){this.cells=t;for(let t=0;t<this.cells.length;t++){let e=this.cells[t];for(let i=0;i<e.length;i++){let s=this.content.querySelector(".id-col-"+t+" .id-row-"+i);if(null===s)continue;let n=e[i];if(n===C.OBSTACLE_ID)s.style.backgroundColor=C.OBSTACLE_COLOR,s.dataset.type="obstacle";else if(n===C.BIRD_ID)s.style.backgroundColor=C.BIRD_COLOR,s.dataset.type="player";else if(n===C.BACKGROUND_ID)s.style.backgroundColor=C.BACKGROUND_COLOR,s.dataset.type="background";else{if(n!==C.POINT_ID)throw new Error('Unknown cell "'+n+'"');s.style.backgroundColor=C.BACKGROUND_COLOR,s.dataset.type="point"}}}}initializeBoardHtml(){this.content=document.createElement("div"),this.content.classList.add("game-container"),this.loadBoardHtml()}loadBoardHtml(){this.content.innerText="";for(let t=0;t<this.columnCount;t++)this.content.append(this.createColumn(t))}getBoardHtml(){return this.content}createColumn(t){let e=document.createElement("div");e.classList.add("col"),e.classList.add("id-col-"+t),e.style.minWidth=this.getColumnHeight()+"px",e.style.maxWidth=this.getColumnHeight()+"px";for(let i=0;i<this.rowCount;i++){let s=document.createElement("div");s.classList.add("id-row-"+i);let n=this.cells[t][i];if(n===C.OBSTACLE_ID)s.style.backgroundColor=C.OBSTACLE_COLOR,s.dataset.type="obstacle";else if(n===C.BIRD_ID)s.style.backgroundColor=C.BIRD_COLOR,s.dataset.type="player";else if(n=C.BACKGROUND_ID)s.style.backgroundColor=C.BACKGROUND_COLOR,s.dataset.type="background";else{if(!(n=C.POINT_ID))throw new Error('Unknown cell "'+n+'"');s.style.backgroundColor=C.BACKGROUND_COLOR,s.dataset.type="point"}s.style.minHeight=this.getRowHeight()+"px",s.style.minWidth=this.getColumnHeight()+"px",e.append(s)}return e.style.display="inline-block",e}}class n{constructor(t){this.createContent(),this.createPlayerNameChange(),this.eventOnPlayerNameChange(t),this.createLeaderBoard()}createContent(){this.content=document.createElement("div"),this.content.classList.add("statistics-container"),this.content.style.textAlign="center",this.content.style.paddingTop="10%"}createLeaderBoard(){this.leaderBoard=document.createElement("div"),this.leaderBoard.classList.add("sleaderbooard"),this.leaderBoard.style.textAlign="center",this.leaderBoard.style.paddingTop="5%",this.content.append(this.leaderBoard)}createPlayerNameChange(){this.nameField=document.createElement("input"),this.confirmButton=document.createElement("button"),this.confirmButton.innerText="Change",this.confirmButton.id="player-name-confirmation",this.nameField.htmlFor="player-name-confirmation",this.content.append(this.nameField),this.content.append(this.confirmButton)}eventOnPlayerNameChange(t){this.confirmButton.addEventListener("click",(()=>{t(this.nameField.value)}))}changePlayerName(t){this.nameField.value=t}addPlayerToScoreBoard(t="guest",e=0){let i=document.createElement("div");i.classList.add("player-entry");let s=document.createElement("span"),n=document.createElement("span"),o=document.createElement("span");s.classList.add("player-name"),n.classList.add("player-name-score-divider"),o.classList.add("player-score"),s.innerText=t,n.innerText=" - ",o.innerText=e,i.append(s),i.append(n),i.append(o),this.leaderBoard.append(i)}cleanLeaderboard(){this.leaderBoard.innerHTML=""}getContent(){return this.content}}document.body.style.margin=0,document.body.style.padding=0,document.body.style.overflow="hidden";let o=new class{constructor(t=27,e=48,i="guest"){this.rowCount=t,this.columnCount=e,this.gameOver=!1,this.board=[],this.scoreBoard=[],this.loadPlayerScore(i),this.untilObstacle=0,this.obstacleWidth=4,this.obstacleSpaceRation=1/3,this.obstacleSpaceVariation=5,this.obstacleSpawnChanceModifier=.01,this.obstaclePadding=5,this.newGame()}getBestScore(){return this.gameScore.bestScore}getCurrentScore(){return this.gameScore.currentScore}getScoreBoard(){return this.scoreBoard}getPlayerName(){return this.gameScore.name}loadPlayerScore(t){let e=!1;this.scoreBoard.forEach((i=>{i.name===t&&(this.lastScore=0,this.gameScore=i,e=!0)})),e||(this.gameScore=new i(t),this.scoreBoard.push(this.gameScore))}getCollision(){return this.board[this.bird.getColumn()][this.bird.getRow()]}nextGameTick(){if(this.untilObstacle<0&&Math.abs(this.untilObstacle)*this.obstacleSpawnChanceModifier>=Math.random()){let t=this.rowCount*this.obstacleSpaceRation+Math.round((2*Math.random()-1)*this.obstacleSpaceVariation),e=this.rowCount-this.obstaclePadding-t,i=this.obstaclePadding,s=Math.floor(Math.random()*(e-i+1))+i;for(let e=0;e<this.obstacleWidth;e++)this.addColumn(!0,s,t,e);this.untilObstacle=18}switch(this.board.length<=this.columnCount&&(this.addColumn(),this.untilObstacle--),this.board[this.bird.getColumn()][this.bird.getRow()]=e,this.bird.nextGameTick(),this.board.shift(),this.getCollision()){case"2":case void 0:this.gameOver=!0;break;case"3":this.gameScore.increaseScore()}this.board[this.bird.getColumn()][this.bird.getRow()]="1"}newGame(){this.board=[],this.gameScore.newGame(),this.gameOver=!1,this.bird=new t(2,Math.floor(this.rowCount/2),this.rowCount);for(let t=0;t<this.columnCount;t++){let t=[];for(let i=0;i<this.rowCount;i++)t.push(e);this.board.push(t)}this.board[this.bird.getColumn()][this.bird.getRow()]="1"}getGameBoard(){return this.board.slice(0,this.columnCount)}addColumn(t=!1,i=0,s=0,n=0){let o=[];for(let r=0;r<this.rowCount;r++)t?r<i||r>i+s?o.push("2"):n?o.push(e):o.push("3"):o.push(e);this.board.push(o)}},r=new function(){let t=document.createElement("div");return t.classList.add("main"),t},a=new function(){let t=document.createElement("div");return t.classList.add("view-container"),t.innerText="",t},l=new class{constructor(t){this.createContent(),this.createStatisticsButton(),this.createGameButton(),this.createInformationElem(),this.showScore(),this.content.append(this.statisticsButton),this.content.append(this.playerInformationElem),this.content.append(this.gameButton),this.statisticsButton.addEventListener("click",t),this.gameButton.addEventListener("click",t)}createContent(){this.content=document.createElement("div"),this.content.style.height="50px",this.content.id="control"}createStatisticsButton(){this.statisticsButton=document.createElement("button"),this.statisticsButton.classList.add("statistics-button"),this.statisticsButton.innerText="Statistics",this.statisticsButton.style.display="inline-block",this.statisticsButton.style.position="absolute",this.statisticsButton.style.left="0px",this.statisticsButton.style.width="40%",this.statisticsButton.style.height="50px"}createGameButton(){this.gameButton=document.createElement("button"),this.gameButton.classList.add("game-button"),this.gameButton.innerText="Game",this.gameButton.style.display="inline-block",this.gameButton.style.position="absolute",this.gameButton.style.right="0px",this.gameButton.style.width="40%",this.gameButton.style.height="50px"}createInformationElem(){this.playerInformationElem=document.createElement("div"),this.playerInformationElem.style.display="inline-block",this.playerInformationElem.style.height="50px",this.playerInformationElem.style.width="20%",this.playerInformationElem.style.marginLeft="40%",this.playerInformationElem.style.textAlign="center",this.playerInformationElem.style.fontFamily="Lucida Console",this.playerInformationElem.classList.add("information")}showScore(){this.playerInformationElem.innerHTML="",this.playerTopScore=document.createElement("div"),this.playerCurrentScore=document.createElement("div"),this.playerTopScoreText=document.createElement("span"),this.playerCurrentScoreText=document.createElement("span"),this.playerTopScoreText.innerText="HighScore: ",this.playerCurrentScoreText.innerText="Current: ",this.playerTopScoreCounter=document.createElement("span"),this.playerCurrentScoreCounter=document.createElement("span"),this.playerTopScoreCounter.classList.add("top-score"),this.playerCurrentScoreCounter.classList.add("current-score"),this.playerTopScoreCounter.innerText="",this.playerCurrentScoreCounter.innerText="",this.playerTopScore.append(this.playerTopScoreText),this.playerCurrentScore.append(this.playerCurrentScoreText),this.playerTopScore.append(this.playerTopScoreCounter),this.playerCurrentScore.append(this.playerCurrentScoreCounter),this.playerInformationElem.append(this.playerTopScore),this.playerInformationElem.append(this.playerCurrentScore)}showName(t){this.playerInformationElem.innerHTML="",this.playerName=document.createElement("div"),this.playerName.innerText=t,this.playerInformationElem.append(this.playerName)}getContent(){return this.content}updateGameScore(t,e){this.playerTopScoreCounter.innerText=t,this.playerCurrentScoreCounter.innerText=e}}((function(t){if(t.target.classList.contains("game-button"))h.isRunning||(c.unloadLeaderBoard(),h.run());else{if(!t.target.classList.contains("statistics-button"))throw new Error('Pressed unknown control button with class "'+t.target.classList+'"');c.isRunning||(h.stop(),c.loadLeaderBoard())}})),h=new class{constructor(t,e,i){this.viewContainer=e,this.model=t,this.isRunning=!1,this.gameView=new s(this.model.getGameBoard()),this.controlView=i,window.addEventListener("resize",(()=>{this.resizeUi()}))}run(){console.log("Game Controller run: "+this.model.name),this.isRunning=!0,this.viewContainer.innerHTML="",this.viewContainer.append(this.gameView.getBoardHtml()),this.controlView.showScore(),this.runGame()}stop(){this.isRunning=!1}runGame(){setTimeout((()=>{this.isRunning&&(this.model.gameOver||(this.model.nextGameTick(),this.gameView.updateBoardHtml(this.model.getGameBoard())),this.gameView.jumped&&(this.model.gameOver?(this.gameView.jumped=!1,this.model.gameOver=!1,this.model.newGame()):(this.model.bird.jump(),this.gameView.jumped=!1)),this.gameView.stop&&(this.model.gameOver,this.model.gameOver),this.controlView.updateGameScore(this.model.getBestScore(),this.model.getCurrentScore()),this.runGame())}),40)}resizeUi(){this.gameView.loadBoardHtml()}}(o,a,l),c=new class{constructor(t,e,i){this.viewContainer=e,this.model=t,this.isRunning=!1,this.controlView=i,this.statisticView=new n((t=>{this.model.loadPlayerScore(t),this.unloadLeaderBoard(),this.loadLeaderBoard(),this.model.newGame()}))}loadLeaderBoard(){this.isRunning=!0,this.viewContainer.innerHTML="",this.controlView.showName(this.model.getPlayerName()),this.statisticView.changePlayerName(this.model.getPlayerName()),console.log(this.model.getPlayerName()),this.model.getScoreBoard().forEach((t=>{this.statisticView.addPlayerToScoreBoard(t.name,t.bestScore)})),this.viewContainer.append(this.statisticView.getContent())}unloadLeaderBoard(){this.isRunning=!1,this.statisticView.cleanLeaderboard()}}(o,a,l);document.body.appendChild(r),r.append(l.getContent()),r.append(a),h.run()})();