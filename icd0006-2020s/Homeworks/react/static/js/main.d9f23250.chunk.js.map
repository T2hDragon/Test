{"version":3,"sources":["components/Alert.tsx","components/Footer.tsx","context/AppContext.ts","components/Header.tsx","containers/home/HomeIndex.tsx","configuration.ts","services/identity-service.ts","containers/identity/Login.tsx","types/EPageStatus.ts","containers/identity/Register.tsx","containers/Page404.tsx","containers/PageForm.tsx","components/Loader.tsx","services/base-service.ts","containers/titles/Index.tsx","containers/titles/Details.tsx","containers/titles/Edit.tsx","containers/titles/Create.tsx","containers/statuses/Index.tsx","containers/statuses/Details.tsx","containers/statuses/Edit.tsx","containers/statuses/Create.tsx","containers/requirements/Index.tsx","containers/requirements/Details.tsx","containers/requirements/Edit.tsx","containers/requirements/Create.tsx","App.tsx","index.tsx"],"names":["EAlertClass","Footer","className","initialAppState","jwt","userName","firstName","lastName","setAuthInfo","AppContext","React","createContext","AppContextProvider","Provider","Header","Consumer","appState","useContext","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","HomeIndex","Alert","props","show","alertClass","role","message","ApiBaseUrl","IdentityService","apiEndpoint","loginData","loginDataJson","JSON","stringify","this","axios","post","response","ok","status","statusCode","data","error","messages","registerData","registerDataJson","Axios","create","baseURL","headers","EPageStatus","Login","useState","password","setLoginData","alertMessage","setAlertMessage","logInClicked","e","a","preventDefault","token","firstname","lastname","onSubmit","nativeEvent","Danger","htmlFor","value","onChange","target","id","name","placeholder","autoComplete","Register","email","passwordConfirmation","setRegisterData","registerClicked","registerResponse","loginResponse","Page404","FormView","values","input","handleChange","checked","checkbox","radio","textarea","rows","select","initialFormValues","PageForm","formValues","setFormValues","console","log","Loader","pageStatus","Loading","Error","BaseService","Authorization","get","getAxiosConfiguration","statusText","queryParams","body","bodyStr","put","delete","RowDisplay","title","Index","titles","setTitles","setPageStatus","loadData","getAll","result","OK","useEffect","map","initialTitleValues","nameId","Details","useParams","setTitle","Edit","titleData","setTitleData","pass","setPass","UpdateClicked","update","DeleteClicked","Create","Statuses","setStatuses","initialStatusValues","setStatus","statusData","setStatusData","requirement","description","price","requirements","setRequirements","initialRequirementValues","descriptionId","amount","setRequirement","requirementData","setRequirementData","Number","App","setAppState","exact","path","component","TitleCreate","TitleEdit","TitleDetails","TitleIndex","StatusCreate","StatusEdit","StatusDetails","StatusIndex","RequirementCreate","RequirementEdit","RequirementDetails","RequirementIndex","ReactDOM","render","basename","process","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9f23250.chunk.js","sourcesContent":["export enum EAlertClass {\r\n    Primary = 'alert-primary',\r\n    Secondary = 'alert-secondary',\r\n    Success = 'alert-success',\r\n    Danger = 'alert-danger',\r\n    Warning = 'alert-warning',\r\n    Info = 'alert-info',\r\n    Light = 'alert-light',\r\n    Dark = 'alert-dark',\r\n}\r\n\r\nconst Alert = (props: {show: boolean, message: string, alertClass: EAlertClass }) => {\r\n    \r\n    return props.show ? <div className={'alert ' + props.alertClass} role=\"alert\">{props.message}</div> : null;\r\n}\r\n\r\nexport default Alert;","const Footer = () => {\r\n    return (\r\n        <footer className=\"border-top footer text-muted\">\r\n            <div className=\"container\">\r\n                &copy; 2021 - React Demo\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\n\r\nexport interface IAppState {\r\n    jwt: string | null;\r\n    userName: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    setAuthInfo: (jwt: string | null, username: string, firstName: string, lastName: string) => void;\r\n}\r\n\r\nexport const initialAppState : IAppState = {\r\n    jwt: null,\r\n    userName: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    setAuthInfo: (jwt: string | null, firstName: string, lastName: string): void => {}\r\n}\r\n\r\nexport const AppContext = React.createContext<IAppState>(initialAppState);\r\nexport const AppContextProvider = AppContext.Provider;\r\nexport const AppContextConsumer = AppContext.Consumer;\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AppContext } from \"../context/AppContext\";\r\n\r\nconst Header = () => {\r\n    const appState = useContext(AppContext);\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\">\r\n                <div className=\"container\">\r\n                    <NavLink className=\"navbar-brand\" to=\"/\">React Demo</NavLink>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\".navbar-collapse\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"navbar-collapse collapse d-sm-inline-flex justify-content-between\">\r\n                        <ul className=\"navbar-nav flex-grow-1\">\r\n\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link text-dark\" to=\"/titles\">Titles</NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link text-dark\" to=\"/statuses\">Statuses</NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link text-dark\" to=\"/requirements\">Requirements</NavLink>\r\n                            </li>\r\n\r\n                            {/* <li className=\"nav-item dropdown\">\r\n                                <a className=\"nav-link dropdown-toggle text-dark\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Languages</a>\r\n                                <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                    <a className=\"dropdown-item text-dark\" href=\"/Home/SetLanguage?culture=et&amp;returnUrl=%2F\">eesti</a>\r\n                                    <a className=\"dropdown-item text-dark\" href=\"/Home/SetLanguage?culture=en-GB&amp;returnUrl=%2F\">English (United Kingdom)</a>\r\n                                </div>\r\n                            </li> */}\r\n\r\n                        </ul>\r\n                        <ul className=\"navbar-nav\">\r\n                            {appState.jwt === null ?\r\n                                <>\r\n                                    <li className=\"nav-item\">\r\n                                        <NavLink className=\"nav-link d-block text-dark\" to=\"/identity/login\">Login</NavLink>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <NavLink className=\"nav-link d-block text-dark\" to=\"/identity/register\">Register</NavLink>\r\n                                    </li>\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    <li className=\"nav-item\">\r\n                                        <span className=\"nav-link text-dark\">{appState.firstName + ' ' + appState.lastName}</span>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <button onClick={() => appState.setAuthInfo(null, '', '', '')} className=\"btn btn-link nav-link text-dark\" >Logout</button>\r\n                                    </li>\r\n                                </>\r\n                            }\r\n\r\n                        </ul>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","const HomeIndex = () => {\r\n    return (\r\n        <>\r\n            <div>TalTech JavaScript React Homework assignment</div>\r\n            <div>Make 3 CRUD</div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HomeIndex;","export const ApiBaseUrl = \"https://autokool.azurewebsites.net/api/v1\";\r\n","import { ILoginResponse } from './../types/ILoginResponse';\r\nimport { IRegisterResponse } from './../types/IRegisterResponse';\r\nimport Axios, { AxiosError } from 'axios';\r\nimport { ApiBaseUrl } from '../configuration';\r\nimport { IFetchResponse } from '../types/IFetchResponse';\r\nimport { IMessages } from '../types/IMessages';\r\n\r\nexport abstract class IdentityService {\r\n    protected static axios = Axios.create({\r\n        baseURL: ApiBaseUrl,\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n\r\n    static async Login(apiEndpoint: string, loginData: {userName: string, password:string}): Promise<IFetchResponse<ILoginResponse>> {\r\n        let loginDataJson = JSON.stringify(loginData);\r\n        try {\r\n            let response = await this.axios.post<ILoginResponse>(apiEndpoint, loginDataJson);\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static async Register(apiEndpoint: string, registerData: {email:string, firstName:string, lastName:string, userName: string, password:string}): Promise<IFetchResponse<IRegisterResponse>> {\r\n        let registerDataJson = JSON.stringify(registerData);\r\n        try {\r\n            let response = await this.axios.post<IRegisterResponse>(apiEndpoint, registerDataJson);\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","import React, { useContext, useState } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport Alert, { EAlertClass } from \"../../components/Alert\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { IdentityService } from \"../../services/identity-service\";\r\n\r\n\r\n\r\nconst Login = () => {\r\n    const appState = useContext(AppContext);\r\n\r\n    const [loginData, setLoginData] = useState({ userName: '', password: '' });\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    const logInClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n        if (loginData.userName === '' || loginData.password === '') {\r\n            setAlertMessage('Empty username or password!');\r\n        };\r\n        setAlertMessage('');\r\n        let response = await IdentityService.Login('account/login', loginData);\r\n        if (!response.ok) {\r\n            setAlertMessage(response.messages![0]);\r\n        } else {\r\n            setAlertMessage('');\r\n            appState.setAuthInfo(response.data!.token, response.data!.userName, response.data!.firstname, response.data!.lastname);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { appState.jwt !== null ? <Redirect to=\"/\" /> : null}\r\n            <h1>Log in</h1>\r\n            <form onSubmit={(e) => logInClicked(e.nativeEvent)}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <section>\r\n                            <hr />\r\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Input_username\">Username</label>\r\n                                <input value={loginData.userName} onChange={e => setLoginData({ ...loginData, userName: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_Username\" name=\"Input.Username\" placeholder=\"username\" autoComplete=\"username\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Input_Password\">Password</label>\r\n                                <input value={loginData.password} onChange={e => setLoginData({ ...loginData, password: e.target.value })} className=\"form-control\" type=\"password\" id=\"Input_Password\" name=\"Input.Password\" placeholder=\"Input your current password...\" autoComplete=\"current-password\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button onClick={(e) => logInClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Log in</button>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;","export enum EPageStatus {\r\n    Loading = \"Loading...\",\r\n    Error = \"Error...\",\r\n    OK = \"Ok\",\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport Alert, { EAlertClass } from \"../../components/Alert\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { IdentityService } from \"../../services/identity-service\";\r\n\r\n\r\n\r\nconst Register = () => {\r\n    const appState = useContext(AppContext);\r\n\r\n    const [registerData, setRegisterData] = useState({ firstName: '', lastName: '', email: '', userName: '', password: '', passwordConfirmation: '' });\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    const registerClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n        if (registerData.userName === '' || registerData.password === '') {\r\n            setAlertMessage('Empty username or password!');\r\n        };\r\n        if (registerData.password !== '' || registerData.passwordConfirmation) {\r\n            setAlertMessage(\"Password don't match\");\r\n        };\r\n        setAlertMessage('');\r\n        let registerResponse = await IdentityService.Register('account/register', registerData);\r\n        if (!registerResponse.ok) {\r\n            setAlertMessage(registerResponse.messages![0]);\r\n        } else {\r\n            setAlertMessage('');\r\n            let loginResponse = await IdentityService.Login('account/login', { userName: registerData.userName, password: registerData.password });\r\n            if (!loginResponse.ok) {\r\n                setAlertMessage('Unable to Log In');\r\n            } else {\r\n                appState.setAuthInfo(loginResponse.data!.token, loginResponse.data!.userName, loginResponse.data!.firstname, loginResponse.data!.lastname);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { appState.jwt !== null ? <Redirect to=\"/\" /> : null}\r\n            <h1>Register</h1>\r\n            <form onSubmit={(e) => e.preventDefault}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <section>\r\n                            <hr />\r\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Input_username\">Username</label>\r\n                                <input value={registerData.userName} onChange={e => setRegisterData({ ...registerData, userName: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_Username\" name=\"Input.Username\" placeholder=\"username\" autoComplete=\"username\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Input_email\">Email</label>\r\n                                <input value={registerData.email} onChange={e => setRegisterData({ ...registerData, email: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_email\" name=\"Input.email\" placeholder=\"example@mail.com\" autoComplete=\"email\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Input_Firstname\">Firstname</label>\r\n                                <input value={registerData.firstName} onChange={e => setRegisterData({ ...registerData, firstName: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_Firstname\" name=\"Input.Firstname\" placeholder=\"First name\" autoComplete=\"firstname\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Input_Lastname\">Lastname</label>\r\n                                <input value={registerData.lastName} onChange={e => setRegisterData({ ...registerData, lastName: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_Lastname\" name=\"Input.Lastname\" placeholder=\"Last name\" autoComplete=\"lastname\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Input_Password\">Password</label>\r\n                                <input value={registerData.password} onChange={e => setRegisterData({ ...registerData, password: e.target.value })} className=\"form-control\" type=\"password\" id=\"Input_Password\" name=\"Input.Password\" placeholder=\"Input your current password...\" autoComplete=\"current-password\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Input_Password_Confirmation\">Password confirmation</label>\r\n                                <input value={registerData.passwordConfirmation} onChange={e => setRegisterData({ ...registerData, passwordConfirmation: e.target.value })} className=\"form-control\" type=\"password\" id=\"Input_Password_Confirmation\" name=\"Input.Password_Confirmation\" placeholder=\"Repeat your password\" autoComplete=\"current-password\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button onClick={(e) => registerClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Register</button>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Register;","const Page404 = () => {\r\n    return (\r\n        <div>Page not found - 404!</div>\r\n    );\r\n}\r\n\r\nexport default Page404;","import { useState } from \"react\";\r\n\r\ninterface IFormValues {\r\n    input: string;\r\n    checkbox: boolean;\r\n    radio: string;\r\n    textarea: string;\r\n    select: string;\r\n}\r\n\r\nexport interface IFormProps {\r\n    values: IFormValues;\r\n\r\n    handleChange: (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => void;\r\n}\r\n\r\nconst FormView = (props: IFormProps) => {\r\n    return (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"formInputText\">Text</label>\r\n                <input value={props.values.input} onChange={(e) => props.handleChange(e.target)} type=\"text\" className=\"form-control\" id=\"formInputText\" />\r\n            </div>\r\n            <div className=\"form-group form-check\">\r\n                <input checked={props.values.checkbox} onChange={(e) => props.handleChange(e.target)} type=\"checkbox\" className=\"form-check-input\" id=\"formInputCheckBox\" />\r\n                <label className=\"form-check-label\" htmlFor=\"formInputCheckBox\">CheckBox</label>\r\n            </div>\r\n\r\n            <div className=\"form-check\">\r\n                <input checked={props.values.radio === 'checked1'} onChange={(e) => props.handleChange(e.target)} className=\"form-check-input\" type=\"radio\" id=\"formInputRadio1\" value=\"checked1\" />\r\n                <label className=\"form-check-label\" htmlFor=\"formInputRadio1\">\r\n                    Radio 1\r\n                </label>\r\n            </div>\r\n            <div className=\"form-check\">\r\n                <input checked={props.values.radio === 'checked2'} onChange={(e) => props.handleChange(e.target)} className=\"form-check-input\" type=\"radio\"id=\"formInputRadio2\" value=\"checked2\" />\r\n                <label className=\"form-check-label\" htmlFor=\"formInputRadio2\">\r\n                    Radio 2\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"formTextArea\">Textarea</label>\r\n                <textarea value={props.values.textarea} onChange={(e) => props.handleChange(e.target)} className=\"form-control\" id=\"formTextArea\" rows={3}></textarea>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"formSelect\">Example select</label>\r\n                <select value={props.values.select} onChange={(e) => props.handleChange(e.target)} className=\"form-control\" id=\"formSelect\">\r\n                    <option>1</option>\r\n                    <option>2</option>\r\n                    <option>3</option>\r\n                </select>\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n        </form>\r\n    );\r\n}\r\nconst initialFormValues: IFormValues = {\r\n    input: '',\r\n    checkbox: false,\r\n    radio: '',\r\n    textarea: '',\r\n    select: '',\r\n};\r\n\r\n\r\n\r\nconst PageForm = () => {\r\n    const [formValues, setFormValues] = useState(initialFormValues);\r\n\r\n    const handleChange = (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => {\r\n        // todo: update form value\r\n        console.log(target);\r\n\r\n        if (target.id === 'formInputText') {\r\n            setFormValues({ ...formValues, input: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'formInputCheckBox') {\r\n            setFormValues({ ...formValues, checkbox: (target as HTMLInputElement).checked });\r\n            return;\r\n        }\r\n        if (target.id === 'formInputRadio1') {\r\n            setFormValues({ ...formValues, radio: (target as HTMLInputElement).value });\r\n            return;\r\n        }\r\n        if (target.id === 'formInputRadio2') {\r\n            setFormValues({ ...formValues, radio: (target as HTMLInputElement).value });\r\n            return;\r\n        }\r\n        if (target.id === 'formTextArea') {\r\n            setFormValues({ ...formValues, textarea: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'formSelect') {\r\n            setFormValues({ ...formValues, select: target.value });\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n    return <FormView values={formValues} handleChange={handleChange} />\r\n};\r\n\r\nexport default PageForm;","import { EPageStatus } from \"../types/EPageStatus\";\r\n\r\nconst Loader = (props: {pageStatus:EPageStatus, statusCode:  number}) => {\r\n    if (props.pageStatus === EPageStatus.Loading){\r\n        return <div className=\"alert alert-primary\" role=\"alert\">Loading...</div>;\r\n    }\r\n    if (props.pageStatus === EPageStatus.Error) {\r\n        return <div className=\"alert alert-danger\" role=\"alert\">Error... {props.statusCode}</div>\r\n    }\r\n    return <></>;\r\n}\r\n\r\nexport default Loader;","import Axios, { AxiosError, AxiosRequestConfig } from 'axios';\r\nimport { ApiBaseUrl } from '../configuration';\r\nimport { IFetchResponse } from '../types/IFetchResponse';\r\nimport { IQueryParams } from \"../types/IQueryParams\";\r\n\r\n\r\nexport abstract class BaseService {\r\n    protected static axios = Axios.create({\r\n        baseURL: ApiBaseUrl,\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n\r\n    protected static getAxiosConfiguration(jwt?: string): AxiosRequestConfig | undefined {\r\n        if (!jwt) return undefined;\r\n        const config: AxiosRequestConfig = {\r\n            headers: {\r\n                Authorization: 'Bearer ' + jwt\r\n            }\r\n        };  \r\n        return config;      \r\n    }\r\n\r\n    static async getAll<TEntity>(apiEndpoint: string, jwt?: string): Promise<IFetchResponse<TEntity[]>> {\r\n        try {\r\n            let response = await this.axios.get<TEntity[]>(apiEndpoint, BaseService.getAxiosConfiguration(jwt));\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data as TEntity[]\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: [error.response?.statusText!],\r\n            }\r\n        }\r\n    }\r\n\r\n    static async get<TEntity>(apiEndpoint: string, id: string, jwt?: string): Promise<IFetchResponse<TEntity>> {\r\n        try {\r\n            let response = await this.axios.get<TEntity>(apiEndpoint + \"/\" + id, BaseService.getAxiosConfiguration(jwt));\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data as TEntity\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: [error.response?.statusText!],\r\n            }\r\n        }\r\n    }\r\n\r\n    static async update<TEntity>(apiEndpoint: string, id: string, queryParams?: IQueryParams , jwt?: string): Promise<IFetchResponse<TEntity>> {\r\n        try {\r\n            const body = queryParams;\r\n            const bodyStr = JSON.stringify(body);\r\n            let response = await this.axios.put<TEntity>(apiEndpoint + \"/\" + id, bodyStr, BaseService.getAxiosConfiguration(jwt));\r\n\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data as TEntity\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: [error.response?.statusText!],\r\n            }\r\n        }\r\n    }\r\n\r\n    static async create<TEntity>(apiEndpoint: string, queryParams?: IQueryParams , jwt?: string): Promise<IFetchResponse<TEntity>> {\r\n        try {\r\n            const body = queryParams;\r\n            const bodyStr = JSON.stringify(body);\r\n            let response = await this.axios.post<TEntity>(apiEndpoint + \"/\", bodyStr, BaseService.getAxiosConfiguration(jwt));\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data as TEntity\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: [error.response?.statusText!],\r\n            }\r\n        }\r\n    }\r\n\r\n    static async delete<TEntity>(apiEndpoint: string, id: string, jwt?: string): Promise<IFetchResponse<TEntity>> {\r\n        try {\r\n\r\n            let response = await this.axios.delete<TEntity>(apiEndpoint + \"/\" + id, BaseService.getAxiosConfiguration(jwt));\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data as TEntity\r\n            };    \r\n        }\r\n        catch (err) {\r\n            let error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: [error.response?.statusText!],\r\n            }\r\n        }\r\n    }\r\n\r\n}","import { useEffect, useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { ITitle } from \"../../dto/ITitle\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\n\r\n\r\n\r\nconst RowDisplay = (props: { title: ITitle }) => (\r\n    <tr>\r\n        <td>\r\n            {props.title.name}\r\n        </td>\r\n        <td className=\"float-right\">\r\n            <Link to={'/titles/' + props.title.id}>Details</Link>\r\n            {useContext(AppContext).jwt === null ?\r\n                <></>\r\n                :\r\n                <>\r\n                    <span> | </span>\r\n                    <Link to={'/titles/edit/' + props.title.id}>Edit</Link>\r\n                </>\r\n            }\r\n        </td>\r\n    </tr>\r\n);\r\n\r\nconst Index = () => {\r\n    const [titles, setTitles] = useState([] as ITitle[]);\r\n\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.getAll<ITitle>('/titles');\r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setTitles(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h1>Titles</h1>\r\n            <Link to={'/titles/create'}>Create new title</Link>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            Title\r\n                        </th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {titles.map(title =>\r\n                        <RowDisplay title={title} key={title.id} />)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <Loader {...pageStatus} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport { Index };","import { useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ITitle } from \"../../dto/ITitle\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\n\r\nconst initialTitleValues: ITitle = {\r\n    id: '',\r\n    name: '',\r\n    nameId: ''\r\n};\r\n\r\nconst Details = () => {\r\n    const appState = useContext(AppContext);\r\n    const { id } = useParams() as IRouteId;\r\n    const [title, setTitle] = useState(initialTitleValues);\r\n\r\n\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.get<ITitle>('/titles', id, appState.jwt!);\r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setTitle(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData(); // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h1>Details</h1>\r\n            <div>\r\n                <h4>Title</h4>\r\n                <hr />\r\n                <Loader {...pageStatus} />\r\n\r\n                <dl className=\"row\">\r\n                    <dt className=\"col-sm-4\">Id</dt>\r\n                    <dd className=\"col-sm-8\">\r\n                        {title.id}\r\n                    </dd>\r\n\r\n                    <dt className=\"col-sm-4\">Name</dt>\r\n                    <dd className=\"col-sm-8\">\r\n                        {title.name}\r\n                    </dd>\r\n                </dl>\r\n            </div>\r\n            <div>\r\n                <Link\r\n                    to=\"/titles\"\r\n                >Back to list</Link>\r\n            </div >\r\n        </>\r\n    );\r\n}\r\n\r\nexport { Details };","import { useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ITitle } from \"../../dto/ITitle\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport Alert, { EAlertClass } from \"../../components/Alert\";\r\n\r\nconst initialTitleValues: ITitle = {\r\n    id: '',\r\n    name: '',\r\n    nameId: ''\r\n};\r\n\r\nconst Edit = () => {\r\n    const appState = useContext(AppContext);\r\n    const { id } = useParams() as IRouteId;\r\n    const [titleData, setTitleData] = useState(initialTitleValues);\r\n    const [pass, setPass] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.get<ITitle>('/titles', id, appState.jwt!);\r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setTitleData(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();// eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const UpdateClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n        if (titleData.name === '') {\r\n            setAlertMessage('Empty name!');\r\n        };\r\n        setAlertMessage('');\r\n        let response = await BaseService.update<ITitle>('/titles', id, titleData, appState.jwt!);\r\n        if (!response.ok) {\r\n            setAlertMessage(response.messages![0]);\r\n        } else {\r\n            setAlertMessage('');\r\n            setPass(true);\r\n        }\r\n    }\r\n\r\n    const DeleteClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n        setAlertMessage('');\r\n        let response = await BaseService.delete<ITitle>('/titles', id, appState.jwt!);\r\n        if (!response.ok) {\r\n            setAlertMessage(response.messages![0]);\r\n        } else {\r\n            setAlertMessage('');\r\n            setPass(true);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { pass ? <Redirect to=\"/titles\" /> : null}\r\n            <h1>Edit</h1>\r\n            <form onSubmit={(e) => e.preventDefault()}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <section>\r\n                            <Loader {...pageStatus} />\r\n                            <hr />\r\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"inputTitleName\">Title</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    id=\"inputTitleName\"\r\n                                    name=\"inputTitleName\"\r\n                                    value={titleData.name} onChange={(e) => setTitleData({ ...titleData, name: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button onClick={(e) => UpdateClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Update</button>\r\n                                <button onClick={(e) => DeleteClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-danger float-right\">Delete</button>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <Link to={'/titles'}>Back to list</Link>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { Edit }\r\n","import { useState, useContext } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ITitle } from \"../../dto/ITitle\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport Alert, { EAlertClass } from \"../../components/Alert\";\r\n\r\nconst initialTitleValues: ITitle = {\r\n    id: '',\r\n    name: '',\r\n    nameId: ''\r\n};\r\n\r\nconst Create = () => {\r\n    const appState = useContext(AppContext);\r\n    const [titleData, setTitleData] = useState(initialTitleValues);\r\n    const [pass, setPass] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n\r\n    const UpdateClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n        if (titleData.name === '') {\r\n            setAlertMessage('Empty name!');\r\n        };\r\n        setAlertMessage('');\r\n        let response = await BaseService.create<ITitle>('/titles', { name: titleData.name }, appState.jwt!);\r\n        if (!response.ok) {\r\n            setAlertMessage(response.messages![0]);\r\n        } else {\r\n            setAlertMessage('');\r\n            setPass(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { pass ? <Redirect to=\"/titles\" /> : null}\r\n            <h1>Create</h1>\r\n            <form onSubmit={(e) => e.preventDefault()}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <section>\r\n                            <hr />\r\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"inputTitleName\">Title</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    id=\"inputTitleName\"\r\n                                    name=\"inputTitleName\"\r\n                                    value={titleData.name} onChange={(e) => setTitleData({ ...titleData, name: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button onClick={(e) => UpdateClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Create</button>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <Link to={'/titles'}>Back to list</Link>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { Create }\r\n","import { useEffect, useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { IStatus } from \"../../dto/IStatus\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\n\r\n\r\n\r\nconst RowDisplay = (props: { status: IStatus }) => (\r\n    <tr>\r\n        <td>\r\n            {props.status.name}\r\n        </td>\r\n        <td className=\"float-right\">\r\n            <Link to={'/statuses/' + props.status.id}>Details</Link>\r\n            {useContext(AppContext).jwt === null ?\r\n                <></>\r\n                :\r\n                <>\r\n                    <span> | </span>\r\n                    <Link to={'/statuses/edit/' + props.status.id}>Edit</Link>\r\n                </>\r\n            }\r\n        </td>\r\n    </tr>\r\n);\r\n\r\nconst Index = () => {\r\n    const [Statuses, setStatuses] = useState([] as IStatus[]);\r\n\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.getAll<IStatus>('/statuses');\r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setStatuses(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h1>Statuses</h1>\r\n            <Link to={'/statuses/create'}>Create new status</Link>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            Status\r\n                        </th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Statuses.map(status =>\r\n                        <RowDisplay status={status} key={status.id} />)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <Loader {...pageStatus} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport { Index };","import { useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IStatus } from \"../../dto/IStatus\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\n\r\nconst initialStatusValues: IStatus = {\r\n    id: '',\r\n    name: '',\r\n    nameId: ''\r\n};\r\n\r\nconst Details = () => {\r\n    const appState = useContext(AppContext);\r\n    const { id } = useParams() as IRouteId;\r\n    const [status, setStatus] = useState(initialStatusValues);\r\n\r\n\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.get<IStatus>('/statuses', id, appState.jwt!);\r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setStatus(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData(); // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h1>Details</h1>\r\n            <div>\r\n                <h4>Status</h4>\r\n                <hr />\r\n                <Loader {...pageStatus} />\r\n\r\n                <dl className=\"row\">\r\n                    <dt className=\"col-sm-4\">Id</dt>\r\n                    <dd className=\"col-sm-8\">\r\n                        {status.id}\r\n                    </dd>\r\n\r\n                    <dt className=\"col-sm-4\">Name</dt>\r\n                    <dd className=\"col-sm-8\">\r\n                        {status.name}\r\n                    </dd>\r\n                </dl>\r\n            </div>\r\n            <div>\r\n                <Link\r\n                    to=\"/statuses\"\r\n                >Back to list</Link>\r\n            </div >\r\n        </>\r\n    );\r\n}\r\n\r\nexport { Details };","import { useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IStatus } from \"../../dto/IStatus\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport Alert, { EAlertClass } from \"../../components/Alert\";\r\n\r\nconst initialStatusValues: IStatus = {\r\n    id: '',\r\n    name: '',\r\n    nameId: ''\r\n};\r\n\r\nconst Edit = () => {\r\n    const appState = useContext(AppContext);\r\n    const { id } = useParams() as IRouteId;\r\n    const [statusData, setStatusData] = useState(initialStatusValues);\r\n    const [pass, setPass] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.get<IStatus>('/statuses', id, appState.jwt!);\r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setStatusData(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();// eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const UpdateClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n        if (statusData.name === '') {\r\n            setAlertMessage('Empty name!');\r\n        };\r\n        setAlertMessage('');\r\n        let response = await BaseService.update<IStatus>('/statuses', id, statusData, appState.jwt!);\r\n        if (!response.ok) {\r\n            setAlertMessage(response.messages![0]);\r\n        } else {\r\n            setAlertMessage('');\r\n            setPass(true);\r\n        }\r\n    }\r\n\r\n    const DeleteClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n        setAlertMessage('');\r\n        let response = await BaseService.delete<IStatus>('/statuses', id, appState.jwt!);\r\n        if (!response.ok) {\r\n            setAlertMessage(response.messages![0]);\r\n        } else {\r\n            setAlertMessage('');\r\n            setPass(true);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { pass ? <Redirect to=\"/statuses\" /> : null}\r\n            <h1>Edit</h1>\r\n            <form onSubmit={(e) => e.preventDefault()}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <section>\r\n                            <Loader {...pageStatus} />\r\n                            <hr />\r\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"inputStatusName\">Status</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    id=\"inputStatusName\"\r\n                                    name=\"inputStatusName\"\r\n                                    value={statusData.name} onChange={(e) => setStatusData({ ...statusData, name: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button onClick={(e) => UpdateClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Update</button>\r\n                                <button onClick={(e) => DeleteClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-danger float-right\">Delete</button>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <Link to={'/statuses'}>Back to list</Link>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { Edit }\r\n","import { useState, useContext } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IStatus } from \"../../dto/IStatus\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport Alert, { EAlertClass } from \"../../components/Alert\";\r\n\r\nconst initialStatusValues: IStatus = {\r\n    id: '',\r\n    name: '',\r\n    nameId: ''\r\n};\r\n\r\nconst Create = () => {\r\n    const appState = useContext(AppContext);\r\n    const [statusData, setStatusData] = useState(initialStatusValues);\r\n    const [pass, setPass] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n\r\n    const UpdateClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n        if (statusData.name === '') {\r\n            setAlertMessage('Empty name!');\r\n        };\r\n        setAlertMessage('');\r\n        let response = await BaseService.create<IStatus>('/statuses', { name: statusData.name }, appState.jwt!);\r\n        if (!response.ok) {\r\n            setAlertMessage(response.messages![0]);\r\n        } else {\r\n            setAlertMessage('');\r\n            setPass(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { pass ? <Redirect to=\"/statuses\" /> : null}\r\n            <h1>Create</h1>\r\n            <form onSubmit={(e) => e.preventDefault()}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <section>\r\n                            <hr />\r\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"inputStatusName\">Status</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    id=\"inputStatusName\"\r\n                                    name=\"inputStatusName\"\r\n                                    value={statusData.name} onChange={(e) => setStatusData({ ...statusData, name: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button onClick={(e) => UpdateClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Create</button>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <Link to={'/statuses'}>Back to list</Link>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { Create }\r\n","import { useEffect, useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { IRequirement } from \"../../dto/IRequirement\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\n\r\n\r\n\r\nconst RowDisplay = (props: { requirement: IRequirement }) => (\r\n    <tr>\r\n        <td>\r\n            {props.requirement.name}\r\n        </td>\r\n        <td>\r\n            {props.requirement.description}\r\n        </td>\r\n        <td>\r\n            {props.requirement.price}\r\n        </td>\r\n        <td className=\"float-right\">\r\n            <Link to={'/requirements/' + props.requirement.id}>Details</Link>\r\n            {useContext(AppContext).jwt === null ?\r\n                <></>\r\n                :\r\n                <>\r\n                    <span> | </span>\r\n                    <Link to={'/requirements/edit/' + props.requirement.id}>Edit</Link>\r\n                </>\r\n            }\r\n        </td>\r\n    </tr>\r\n);\r\n\r\nconst Index = () => {\r\n    const [requirements, setRequirements] = useState([] as IRequirement[]);\r\n\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.getAll<IRequirement>('/requirements');\r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setRequirements(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h1>Requirements</h1>\r\n            <Link to={'/requirements/create'}>Create new requirement</Link>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            Name\r\n                        </th>\r\n                        <th>\r\n                            description\r\n                        </th>\r\n                        <th>\r\n                            Price\r\n                        </th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {requirements.map(requirement =>\r\n                        <RowDisplay requirement={requirement} key={requirement.id} />)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <Loader {...pageStatus} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport { Index };","import { useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IRequirement } from \"../../dto/IRequirement\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\n\r\nconst initialRequirementValues: IRequirement = {\r\n    id: '',\r\n    name: '',\r\n    nameId: '',\r\n    description: '',\r\n    descriptionId: '',\r\n    amount: 0,\r\n    price: 0,\r\n};\r\n\r\nconst Details = () => {\r\n    const appState = useContext(AppContext);\r\n    const { id } = useParams() as IRouteId;\r\n    const [requirement, setRequirement] = useState(initialRequirementValues);\r\n\r\n\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.get<IRequirement>('/requirements', id, appState.jwt!);\r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setRequirement(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData(); // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h1>Details</h1>\r\n            <div>\r\n                <h4>Requirement</h4>\r\n                <hr />\r\n                <Loader {...pageStatus} />\r\n\r\n                <dl className=\"row\">\r\n                    <dt className=\"col-sm-4\">Id</dt>\r\n                    <dd className=\"col-sm-8\">\r\n                        {requirement.id}\r\n                    </dd>\r\n\r\n                    <dt className=\"col-sm-4\">Name</dt>\r\n                    <dd className=\"col-sm-8\">\r\n                        {requirement.name}\r\n                    </dd>\r\n                    <dt className=\"col-sm-4\">Description</dt>\r\n                    <dd className=\"col-sm-8\">\r\n                        {requirement.description}\r\n                    </dd>\r\n                    <dt className=\"col-sm-4\">Price</dt>\r\n                    <dd className=\"col-sm-8\">\r\n                        {requirement.price}\r\n                    </dd>\r\n                    {requirement.amount !== null ?\r\n                        <>\r\n                            <dt className=\"col-sm-4\">Amount</dt>\r\n                            <dd className=\"col-sm-8\">\r\n                                {requirement.amount}\r\n                            </dd>\r\n                        </>\r\n                        :\r\n                        <></>\r\n                    }\r\n                </dl>\r\n            </div>\r\n            <div>\r\n                <Link\r\n                    to=\"/requirements\"\r\n                >Back to list</Link>\r\n            </div >\r\n        </>\r\n    );\r\n}\r\n\r\nexport { Details };","import { useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IRequirement } from \"../../dto/IRequirement\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport Alert, { EAlertClass } from \"../../components/Alert\";\r\n\r\nconst initialRequirementValues: IRequirement = {\r\n    id: '',\r\n    name: '',\r\n    nameId: '',\r\n    description: '',\r\n    descriptionId: '',\r\n    amount: 0,\r\n    price: 0,\r\n};\r\n\r\nconst Edit = () => {\r\n    const appState = useContext(AppContext);\r\n    const { id } = useParams() as IRouteId;\r\n    const [requirementData, setRequirementData] = useState(initialRequirementValues);\r\n    const [pass, setPass] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.get<IRequirement>('/requirements', id, appState.jwt!);\r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setRequirementData(result.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();// eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const UpdateClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n        if (requirementData.name === '' || requirementData.description === '' || requirementData.price === null) {\r\n            setAlertMessage('Empty value!');\r\n        };\r\n        setAlertMessage('');\r\n        let response = await BaseService.update<IRequirement>('/requirements', id, requirementData, appState.jwt!);\r\n        if (!response.ok) {\r\n            setAlertMessage(response.messages![0]);\r\n        } else {\r\n            setAlertMessage('');\r\n            setPass(true);\r\n        }\r\n    }\r\n\r\n    const DeleteClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n        setAlertMessage('');\r\n        let response = await BaseService.delete<IRequirement>('/requirements', id, appState.jwt!);\r\n        if (!response.ok) {\r\n            setAlertMessage(response.messages![0]);\r\n        } else {\r\n            setAlertMessage('');\r\n            setPass(true);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { pass ? <Redirect to=\"/requirements\" /> : null}\r\n            <h1>Edit</h1>\r\n            <form onSubmit={(e) => e.preventDefault()}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <section>\r\n                            <Loader {...pageStatus} />\r\n                            <hr />\r\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"inputName\">Name</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    id=\"inputName\"\r\n                                    name=\"inputName\"\r\n                                    value={requirementData.name} onChange={(e) => setRequirementData({ ...requirementData, name: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"inputDescription\">Description</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    id=\"inputDescription\"\r\n                                    name=\"inputDescription\"\r\n                                    value={requirementData.description} onChange={(e) => setRequirementData({ ...requirementData, description: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"inputPrice\">Price</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"number\"\r\n                                    id=\"inputPrice\"\r\n                                    name=\"inputPrice\"\r\n                                    value={requirementData.price} onChange={(e) => setRequirementData({ ...requirementData, price: Number(e.target.value) })}\r\n                                />\r\n                            </div>\r\n                            {requirementData.amount !== null ?\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"inputAmount\">Amount</label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"number\"\r\n                                        id=\"inputAmount\"\r\n                                        name=\"inputAmount\"\r\n                                        value={requirementData.amount!} onChange={(e) => setRequirementData({ ...requirementData, amount: Number(e.target.value) })}\r\n                                    />\r\n                                </div>\r\n                                :\r\n                                <></>\r\n                            }\r\n                            <div className=\"form-group\">\r\n                                <button onClick={(e) => UpdateClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Update</button>\r\n                                <button onClick={(e) => DeleteClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-danger float-right\">Delete</button>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <Link to={'/Names'}>Back to list</Link>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { Edit }\r\n","import { useState, useContext } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IRequirement } from \"../../dto/IRequirement\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport Alert, { EAlertClass } from \"../../components/Alert\";\r\n\r\nconst initialRequirementValues: IRequirement = {\r\n    id: '',\r\n    name: '',\r\n    nameId: '',\r\n    description: '',\r\n    descriptionId: '',\r\n    amount: null,\r\n    price: 0,\r\n};\r\n\r\nconst Create = () => {\r\n    const appState = useContext(AppContext);\r\n    const [requirementData, setRequirementData] = useState(initialRequirementValues);\r\n    const [pass, setPass] = useState(false);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n\r\n    const UpdateClicked = async (e: Event) => {\r\n        console.log(\"Clocked1\");\r\n        e.preventDefault();\r\n        if (requirementData.name === '' || requirementData.description === '' || requirementData.price === null) {\r\n            setAlertMessage('Empty value!');\r\n        } else {\r\n            setAlertMessage('');\r\n            let response = await BaseService.create<IRequirement>('/requirements', { name: requirementData.name, description: requirementData.description, amount: requirementData.amount, price: requirementData.price }, appState.jwt!);\r\n            console.log(response);\r\n            if (!response.ok) {\r\n                setAlertMessage(response.messages![0]);\r\n            } else {\r\n                setAlertMessage('');\r\n                setPass(true);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            { pass ? <Redirect to=\"/requirements\" /> : null}\r\n            <h1>Create</h1>\r\n            <form onSubmit={(e) => e.preventDefault()}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <section>\r\n                            <hr />\r\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"inputName\">Name</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    id=\"inputName\"\r\n                                    name=\"inputName\"\r\n                                    value={requirementData.name} onChange={(e) => setRequirementData({ ...requirementData, name: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"inputDescription\">Description</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    id=\"inputDescription\"\r\n                                    name=\"inputDescription\"\r\n                                    value={requirementData.description} onChange={(e) => setRequirementData({ ...requirementData, description: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"inputPrice\">Price</label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"number\"\r\n                                    id=\"inputPrice\"\r\n                                    name=\"inputPrice\"\r\n                                    value={requirementData.price} onChange={(e) => setRequirementData({ ...requirementData, price: Number(e.target.value) })}\r\n                                />\r\n                            </div>\r\n                            {requirementData.amount !== null ?\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"inputAmount\">Amount</label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"number\"\r\n                                        id=\"inputAmount\"\r\n                                        name=\"inputAmount\"\r\n                                        value={requirementData.amount!} onChange={(e) => setRequirementData({ ...requirementData, amount: Number(e.target.value) })}\r\n                                    />\r\n                                </div>\r\n                                :\r\n                                <></>\r\n                            }\r\n                            <div className=\"form-group\">\r\n                                <button onClick={(e) => UpdateClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Create</button>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <Link to={'/requirements'}>Back to list</Link>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport { Create };\r\n","import React, { useState } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport HomeIndex from './containers/home/HomeIndex';\r\nimport Login from './containers/identity/Login';\r\nimport Register from './containers/identity/Register';\r\nimport Page404 from './containers/Page404';\r\nimport PageForm from './containers/PageForm';\r\nimport { AppContextProvider, initialAppState } from './context/AppContext';\r\nimport { Index as TitleIndex } from './containers/titles/Index';\r\nimport { Details as TitleDetails } from './containers/titles/Details';\r\nimport { Edit as TitleEdit } from './containers/titles/Edit';\r\nimport { Create as TitleCreate } from './containers/titles/Create';\r\n\r\nimport { Index as StatusIndex } from './containers/statuses/Index';\r\nimport { Details as StatusDetails } from './containers/statuses/Details';\r\nimport { Edit as StatusEdit } from './containers/statuses/Edit';\r\nimport { Create as StatusCreate } from './containers/statuses/Create';\r\n\r\nimport { Index as RequirementIndex } from './containers/requirements/Index';\r\nimport { Details as RequirementDetails } from './containers/requirements/Details';\r\nimport { Edit as RequirementEdit } from './containers/requirements/Edit';\r\nimport { Create as RequirementCreate } from './containers/requirements/Create';\r\n\r\nfunction App() {\r\n    const setAuthInfo = (jwt: string | null, firstName: string, lastName: string): void => {\r\n        setAppState({ ...appState, jwt, firstName, lastName });\r\n    }\r\n\r\n    const [appState, setAppState] = useState({ ...initialAppState, setAuthInfo });\r\n\r\n    return (\r\n        <>\r\n            <AppContextProvider value={appState} >\r\n                <Header />\r\n                <div className=\"container\">\r\n                    <main role=\"main\" className=\"pb-3\">\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={HomeIndex} />\r\n\r\n                            <Route path=\"/form\" component={PageForm} />\r\n\r\n                            <Route path=\"/identity/login\" component={Login} />\r\n                            <Route path=\"/identity/register\" component={Register} />\r\n\r\n                            <Route path=\"/titles/create\" component={TitleCreate} />\r\n                            <Route path=\"/titles/edit/:id\" component={TitleEdit} />\r\n                            <Route path=\"/titles/:id\" component={TitleDetails} />\r\n                            <Route path=\"/titles\" component={TitleIndex} />\r\n\r\n                            <Route path=\"/statuses/create\" component={StatusCreate} />\r\n                            <Route path=\"/statuses/edit/:id\" component={StatusEdit} />\r\n                            <Route path=\"/statuses/:id\" component={StatusDetails} />\r\n                            <Route path=\"/statuses\" component={StatusIndex} />\r\n\r\n                            <Route path=\"/requirements/create\" component={RequirementCreate} />\r\n                            <Route path=\"/requirements/edit/:id\" component={RequirementEdit} />\r\n                            <Route path=\"/requirements/:id\" component={RequirementDetails} />\r\n                            <Route path=\"/requirements\" component={RequirementIndex} />\r\n\r\n                            <Route component={Page404} />\r\n                        </Switch>\r\n                    </main>\r\n                </div>\r\n                <Footer />\r\n            </AppContextProvider>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import 'jquery';\r\nimport 'popper.js';\r\nimport 'bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nimport './assets/site.css'\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n        <React.StrictMode>\r\n            <App />\r\n        </React.StrictMode>\r\n    </Router>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}