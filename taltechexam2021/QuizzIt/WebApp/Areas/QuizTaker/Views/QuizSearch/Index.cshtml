@model WebApp.Areas.QuizTaker.ModelViews.QuizSearch.QuizSearchViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Quizzes</h1>

<p>
    <form asp-action="FilterQuizSearch" asp-route-page=0>
        <div class="row">
            <div class="form-group col-9">
                <input asp-for="Search" placeholder="Quiz..." class="form-control"/>
            </div>
            <div class="form-group col-3">
                <button class="btn btn-primary">Filter</button>
            </div>
        </div>
    </form>
</p>
<table class="table table-dark table-striped table-hover ">
    <thead>
    <tr>
        <th scope="col">Quizz</th>
        <th scope="col">Creator Username</th>
        <th scope="col">Questions</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Quizzes)
    {
        <tr>
            <td>
                <a asp-action="AnswerQuiz" asp-route-quizId="@item.Id">
                    <span class="btn btn-primary text-light">@item.Name</span>
                </a>
            </td>
            <td>
                @item.Creator!.UserName
            </td>
            <td>
                @item.Questions!.Count
            </td>
        </tr>
    }
    </tbody>
</table>
@if (Model.Page != 0)
{
    <form asp-action="FilterQuizSearch" asp-route-page=@(Model.Page - 1) class="d-inline">
        <input type="hidden" asp-for="Search" placeholder="Quiz..." class="form-control"/>
        <button class="btn btn-primary">
            <i class="fa fa-arrow-left"></i>
        </button>
    </form>
}
<div class="btn btn-primary d-inline">
    @(Model.Page + 1)
</div>
@if (Model.Quizzes.Count() > 4)
{
    <form asp-action="FilterQuizSearch" asp-route-page=@(Model.Page + 1) class="d-inline">
        <input type="hidden" asp-for="Search" placeholder="Quiz..." class="form-control"/>
        <button class="btn btn-primary">
            <i class="fa fa-arrow-right"></i>
        </button>
    </form>
}

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}